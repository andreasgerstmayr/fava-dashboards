// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dashboard: HTML Snapshot Tests Assets 1`] = `
<style type="text/css">
  #dashboard {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}
#dashboard .panel {
    padding: 20px;
    min-width: 300px;
}
#dashboard .panel h2 {
    text-align: center;
}
#dashboard a {
    color: #333;
}

/* set panel min-width to 100% on screens
  < 802px (navbar + padding + 2*300px) */
@media (max-width: 802px) {
    #dashboard .panel {
        min-width: 100%;
    }
}
</style>
<script id="favaDashboardsBootstrap"
        type="application/json"
>
  {
  "dashboard": {
    "name": "Assets",
    "panels": [
      {
        "queries": [
          {
            "bql": "SELECT UNITS(SUM(position)) as units, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) as market_value\\nWHERE account_sortkey(account) ~ \\u0027^[01]\\u0027\\nGROUP BY currency, cost_currency\\nORDER BY market_value\\n",
            "link": "/beancount/account/{account}/?time={time}",
            "result": [
              {
                "market_value": {
                  "USD": 1849.80
                },
                "units": {
                  "USD": 1849.80
                }
              },
              {
                "market_value": {
                  "USD": 3850.56
                },
                "units": {
                  "VHT": 16
                }
              },
              {
                "market_value": {
                  "USD": 4457.40
                },
                "units": {
                  "VEA": 19
                }
              },
              {
                "market_value": {
                  "USD": 4975.95
                },
                "units": {
                  "ITOT": 49
                }
              },
              {
                "market_value": {
                  "USD": 7517.64
                },
                "units": {
                  "GLD": 52
                }
              },
              {
                "market_value": {
                  "USD": 28014.42410
                },
                "units": {
                  "VBMPX": 175.474
                }
              },
              {
                "market_value": {
                  "USD": 45877.18693
                },
                "units": {
                  "RGAGX": 313.219
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\n\\nconst data = panel.queries[0].result\\n  .filter((row) =\\u003e row.market_value[ledger.ccy])\\n  .map((row) =\\u003e ({ name: Object.keys(row.units)[0], value: row.market_value[ledger.ccy] }));\\n\\nreturn {\\n  tooltip: {\\n    formatter: (params) =\\u003e\\n      \`\${params.marker} \${\\n        ledger.commodities[params.name]?.meta.name ?? params.name\\n      } \\u003cspan style=\\"padding-left: 15px; font-weight: bold;\\"\\u003e\${currencyFormat.format(\\n        params.value,\\n      )}\\u003c/span\\u003e (\${params.percent.toFixed(0)}%)\`,\\n  },\\n  series: [\\n    {\\n      type: \\"pie\\",\\n      data,\\n    },\\n  ],\\n};\\n",
        "title": "Assets \\ud83c\\udfe6",
        "type": "echarts",
        "width": "50%"
      },
      {
        "link": "/beancount/income_statement/",
        "queries": [
          {
            "bql": "SELECT year, month,\\nCONVERT(LAST(balance), \\u0027{{ledger.ccy}}\\u0027, DATE_ADD(YMONTH(DATE_ADD(YMONTH(FIRST(date)), 31)), -1)) AS value\\nWHERE account_sortkey(account) ~ \\u0027^[01]\\u0027\\nGROUP BY year, month\\n",
            "link": "/beancount/balance_sheet/?time={time}",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": 29234.73618
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 32430.84356
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": 35638.84345
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": 38674.87320
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": 41716.41678
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": 44435.59516
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 50611.69697
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": 51735.46788
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": 54045.40396
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": 56077.40796
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": 57174.07826
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": 62493.75704
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": 45723.39256
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": 49281.63140
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": 51746.88049
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": 55400.47188
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": 58680.93796
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 63628.97993
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 71450.90651
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": 76042.56887
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": 77417.29226
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": 80058.06354
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": 81316.15822
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 88062.05306
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 90631.22126
                },
                "year": 2022
              },
              {
                "month": 2,
                "value": {
                  "USD": 96542.96103
                },
                "year": 2022
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst months = helpers.iterateMonths(ledger.dateFirst, ledger.dateLast).map((m) =\\u003e \`\${m.month}/\${m.year}\`);\\nconst amounts = {};\\n\\n// the beancount query only returns months where there was at least one matching transaction, therefore we group by month\\nfor (let row of panel.queries[0].result) {\\n  amounts[\`\${row.month}/\${row.year}\`] = row.value[ledger.ccy];\\n}\\n\\nreturn {\\n  tooltip: {\\n    valueFormatter: currencyFormat.format,\\n  },\\n  xAxis: {\\n    data: months,\\n  },\\n  yAxis: {\\n    axisLabel: {\\n      formatter: currencyFormat.format,\\n    },\\n  },\\n  series: [\\n    {\\n      type: \\"line\\",\\n      smooth: true,\\n      connectNulls: true,\\n      data: months.map((month) =\\u003e amounts[month]),\\n    },\\n  ],\\n  onClick: (event) =\\u003e {\\n    if (!panel.queries[0].link) return;\\n    const [month, year] = event.name.split(\\"/\\");\\n    const link = panel.queries[0].link.replaceAll(\\"#\\", \\"%23\\").replace(\\"{time}\\", \`\${year}-\${month.padStart(2, \\"0\\")}\`);\\n    window.open(link);\\n  },\\n};\\n",
        "title": "Net Worth \\ud83d\\udcb0",
        "type": "echarts",
        "width": "50%"
      },
      {
        "queries": [
          {
            "bql": "SELECT year, month,\\nCONVERT(LAST(balance),       \\u0027{{ledger.ccy}}\\u0027, DATE_ADD(YMONTH(DATE_ADD(YMONTH(FIRST(date)), 31)), -1)) AS market_value,\\nCONVERT(COST(LAST(balance)), \\u0027{{ledger.ccy}}\\u0027, DATE_ADD(YMONTH(DATE_ADD(YMONTH(FIRST(date)), 31)), -1)) AS book_value\\nWHERE account ~ \\u0027^Assets:\\u0027 AND currency != \\u0027{{ledger.ccy}}\\u0027\\nGROUP BY year, month\\n",
            "result": [
              {
                "book_value": {
                  "USD": 3599.99946
                },
                "market_value": {
                  "USD": 3611.37618
                },
                "month": 1,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 7200.06625
                },
                "market_value": {
                  "USD": 7222.50356
                },
                "month": 2,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 12599.96893
                },
                "market_value": {
                  "USD": 12900.13345
                },
                "month": 3,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 16200.01221
                },
                "market_value": {
                  "USD": 16497.38320
                },
                "month": 4,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 19800.01853
                },
                "market_value": {
                  "USD": 20243.70678
                },
                "month": 5,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 23400.09094
                },
                "market_value": {
                  "USD": 23743.73516
                },
                "month": 6,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 27000.00664
                },
                "market_value": {
                  "USD": 27991.71697
                },
                "month": 7,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 27749.99721
                },
                "market_value": {
                  "USD": 27986.69788
                },
                "month": 8,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 30765.75721
                },
                "market_value": {
                  "USD": 31819.84796
                },
                "month": 10,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 35149.91721
                },
                "market_value": {
                  "USD": 36024.23704
                },
                "month": 12,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 36949.93509
                },
                "market_value": {
                  "USD": 38083.17256
                },
                "month": 1,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 40549.96705
                },
                "market_value": {
                  "USD": 42405.82140
                },
                "month": 2,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 45949.91733
                },
                "market_value": {
                  "USD": 48302.62049
                },
                "month": 3,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 49107.66433
                },
                "market_value": {
                  "USD": 51916.66188
                },
                "month": 4,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 52707.78377
                },
                "market_value": {
                  "USD": 56016.53796
                },
                "month": 5,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 56307.87973
                },
                "market_value": {
                  "USD": 61667.75993
                },
                "month": 6,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 59907.70479
                },
                "market_value": {
                  "USD": 67056.69651
                },
                "month": 7,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 62457.82171
                },
                "market_value": {
                  "USD": 71951.79887
                },
                "month": 8,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 67432.45171
                },
                "market_value": {
                  "USD": 76123.40226
                },
                "month": 9,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 71152.99171
                },
                "market_value": {
                  "USD": 80617.00354
                },
                "month": 10,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 70115.34171
                },
                "market_value": {
                  "USD": 78832.56822
                },
                "month": 11,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 75663.47171
                },
                "market_value": {
                  "USD": 86767.18306
                },
                "month": 12,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 79263.30370
                },
                "market_value": {
                  "USD": 90114.53126
                },
                "month": 1,
                "year": 2022
              },
              {
                "book_value": {
                  "USD": 82863.45951
                },
                "market_value": {
                  "USD": 94693.16103
                },
                "month": 2,
                "year": 2022
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst months = helpers.iterateMonths(ledger.dateFirst, ledger.dateLast).map((m) =\\u003e \`\${m.month}/\${m.year}\`);\\nconst amounts = {};\\n\\n// the beancount query only returns months where there was at least one matching transaction, therefore we group by month\\nfor (let row of panel.queries[0].result) {\\n  amounts[\`\${row.month}/\${row.year}\`] = {\\n    market_value: row.market_value[ledger.ccy],\\n    book_value: row.book_value[ledger.ccy],\\n  };\\n}\\n\\nreturn {\\n  tooltip: {\\n    trigger: \\"axis\\",\\n    valueFormatter: currencyFormat.format,\\n  },\\n  legend: {\\n    top: \\"bottom\\",\\n  },\\n  xAxis: {\\n    data: months,\\n  },\\n  yAxis: {\\n    axisLabel: {\\n      formatter: currencyFormat.format,\\n    },\\n  },\\n  series: [\\n    {\\n      type: \\"line\\",\\n      name: \\"Market Value\\",\\n      smooth: true,\\n      connectNulls: true,\\n      data: months.map((month) =\\u003e amounts[month]?.market_value),\\n    },\\n    {\\n      type: \\"line\\",\\n      name: \\"Book Value\\",\\n      smooth: true,\\n      connectNulls: true,\\n      data: months.map((month) =\\u003e amounts[month]?.book_value),\\n    },\\n  ],\\n  onClick: (event) =\\u003e {\\n    if (!panel.queries[0].link) return;\\n    const [month, year] = event.name.split(\\"/\\");\\n    const link = panel.queries[0].link.replaceAll(\\"#\\", \\"%23\\").replace(\\"{time}\\", \`\${year}-\${month.padStart(2, \\"0\\")}\`);\\n    window.open(link);\\n  },\\n};\\n",
        "title": "Portfolio \\ud83d\\udcc8",
        "type": "echarts",
        "width": "50%"
      },
      {
        "queries": [
          {
            "bql": "SELECT year, month,\\nCONVERT(LAST(balance),       \\u0027{{ledger.ccy}}\\u0027, DATE_ADD(YMONTH(DATE_ADD(YMONTH(FIRST(date)), 31)), -1)) AS market_value,\\nCONVERT(COST(LAST(balance)), \\u0027{{ledger.ccy}}\\u0027, DATE_ADD(YMONTH(DATE_ADD(YMONTH(FIRST(date)), 31)), -1)) AS book_value\\nWHERE account ~ \\u0027^Assets:\\u0027 AND currency != \\u0027{{ledger.ccy}}\\u0027\\nGROUP BY year, month\\n",
            "result": [
              {
                "book_value": {
                  "USD": 3599.99946
                },
                "market_value": {
                  "USD": 3611.37618
                },
                "month": 1,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 7200.06625
                },
                "market_value": {
                  "USD": 7222.50356
                },
                "month": 2,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 12599.96893
                },
                "market_value": {
                  "USD": 12900.13345
                },
                "month": 3,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 16200.01221
                },
                "market_value": {
                  "USD": 16497.38320
                },
                "month": 4,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 19800.01853
                },
                "market_value": {
                  "USD": 20243.70678
                },
                "month": 5,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 23400.09094
                },
                "market_value": {
                  "USD": 23743.73516
                },
                "month": 6,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 27000.00664
                },
                "market_value": {
                  "USD": 27991.71697
                },
                "month": 7,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 27749.99721
                },
                "market_value": {
                  "USD": 27986.69788
                },
                "month": 8,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 30765.75721
                },
                "market_value": {
                  "USD": 31819.84796
                },
                "month": 10,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 35149.91721
                },
                "market_value": {
                  "USD": 36024.23704
                },
                "month": 12,
                "year": 2020
              },
              {
                "book_value": {
                  "USD": 36949.93509
                },
                "market_value": {
                  "USD": 38083.17256
                },
                "month": 1,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 40549.96705
                },
                "market_value": {
                  "USD": 42405.82140
                },
                "month": 2,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 45949.91733
                },
                "market_value": {
                  "USD": 48302.62049
                },
                "month": 3,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 49107.66433
                },
                "market_value": {
                  "USD": 51916.66188
                },
                "month": 4,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 52707.78377
                },
                "market_value": {
                  "USD": 56016.53796
                },
                "month": 5,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 56307.87973
                },
                "market_value": {
                  "USD": 61667.75993
                },
                "month": 6,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 59907.70479
                },
                "market_value": {
                  "USD": 67056.69651
                },
                "month": 7,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 62457.82171
                },
                "market_value": {
                  "USD": 71951.79887
                },
                "month": 8,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 67432.45171
                },
                "market_value": {
                  "USD": 76123.40226
                },
                "month": 9,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 71152.99171
                },
                "market_value": {
                  "USD": 80617.00354
                },
                "month": 10,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 70115.34171
                },
                "market_value": {
                  "USD": 78832.56822
                },
                "month": 11,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 75663.47171
                },
                "market_value": {
                  "USD": 86767.18306
                },
                "month": 12,
                "year": 2021
              },
              {
                "book_value": {
                  "USD": 79263.30370
                },
                "market_value": {
                  "USD": 90114.53126
                },
                "month": 1,
                "year": 2022
              },
              {
                "book_value": {
                  "USD": 82863.45951
                },
                "market_value": {
                  "USD": 94693.16103
                },
                "month": 2,
                "year": 2022
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst months = helpers.iterateMonths(ledger.dateFirst, ledger.dateLast).map((m) =\\u003e \`\${m.month}/\${m.year}\`);\\nconst amounts = {};\\n\\n// the beancount query only returns months where there was at least one matching transaction, therefore we group by month\\nfor (let row of panel.queries[0].result) {\\n  amounts[\`\${row.month}/\${row.year}\`] = row.market_value[ledger.ccy] - row.book_value[ledger.ccy];\\n}\\n\\nreturn {\\n  tooltip: {\\n    valueFormatter: currencyFormat.format,\\n  },\\n  xAxis: {\\n    data: months,\\n  },\\n  yAxis: {\\n    axisLabel: {\\n      formatter: currencyFormat.format,\\n    },\\n  },\\n  series: [\\n    {\\n      type: \\"line\\",\\n      smooth: true,\\n      connectNulls: true,\\n      data: months.map((month) =\\u003e amounts[month]),\\n    },\\n  ],\\n};\\n",
        "title": "Portfolio Gains \\u2728",
        "type": "echarts",
        "width": "50%"
      },
      {
        "queries": [
          {
            "bql": "SELECT UNITS(SUM(position)) as units, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) as market_value\\nWHERE account_sortkey(account) ~ \\u0027^[01]\\u0027\\nGROUP BY currency, cost_currency\\nORDER BY market_value\\n",
            "result": [
              {
                "market_value": {
                  "USD": 1849.80
                },
                "units": {
                  "USD": 1849.80
                }
              },
              {
                "market_value": {
                  "USD": 3850.56
                },
                "units": {
                  "VHT": 16
                }
              },
              {
                "market_value": {
                  "USD": 4457.40
                },
                "units": {
                  "VEA": 19
                }
              },
              {
                "market_value": {
                  "USD": 4975.95
                },
                "units": {
                  "ITOT": 49
                }
              },
              {
                "market_value": {
                  "USD": 7517.64
                },
                "units": {
                  "GLD": 52
                }
              },
              {
                "market_value": {
                  "USD": 28014.42410
                },
                "units": {
                  "VBMPX": 175.474
                }
              },
              {
                "market_value": {
                  "USD": 45877.18693
                },
                "units": {
                  "RGAGX": 313.219
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\n\\nlet totalValue = 0;\\nconst assetClasses = {};\\nfor (let row of panel.queries[0].result) {\\n  if (!row.market_value[ledger.ccy]) continue;\\n\\n  const ccy = Object.keys(row.units)[0];\\n  const value = row.market_value[ledger.ccy];\\n  const assetName = ledger.commodities[ccy]?.meta.name ?? ccy;\\n  const assetClass = ledger.commodities[ccy]?.meta.asset_class ?? \\"undefined\\";\\n  if (!(assetClass in assetClasses)) {\\n    assetClasses[assetClass] = { name: assetClass, children: [] };\\n  }\\n  assetClasses[assetClass].children.push({ name: assetName, value });\\n  totalValue += value;\\n}\\n\\nreturn {\\n  tooltip: {\\n    formatter: (params) =\\u003e\\n      \`\${params.marker} \${params.name} \\u003cspan style=\\"padding-left: 15px; font-weight: bold;\\"\\u003e\${currencyFormat.format(\\n        params.value,\\n      )}\\u003c/span\\u003e (\${((params.value / totalValue) * 100).toFixed(0)}%)\`,\\n  },\\n  series: [\\n    {\\n      type: \\"sunburst\\",\\n      radius: \\"100%\\",\\n      label: {\\n        show: false,\\n      },\\n      data: Object.values(assetClasses),\\n    },\\n  ],\\n};\\n",
        "title": "Asset Classes \\ud83c\\udfe6",
        "type": "echarts",
        "width": "50%"
      },
      {
        "queries": [
          {
            "bql": "SELECT UNITS(SUM(position)) as units, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) as market_value\\nWHERE account_sortkey(account) ~ \\u0027^[01]\\u0027 AND currency != \\u0027{{ledger.ccy}}\\u0027\\nGROUP BY currency, cost_currency\\nORDER BY market_value\\n",
            "result": [
              {
                "market_value": {
                  "USD": 3850.56
                },
                "units": {
                  "VHT": 16
                }
              },
              {
                "market_value": {
                  "USD": 4457.40
                },
                "units": {
                  "VEA": 19
                }
              },
              {
                "market_value": {
                  "USD": 4975.95
                },
                "units": {
                  "ITOT": 49
                }
              },
              {
                "market_value": {
                  "USD": 7517.64
                },
                "units": {
                  "GLD": 52
                }
              },
              {
                "market_value": {
                  "USD": 28014.42410
                },
                "units": {
                  "VBMPX": 175.474
                }
              },
              {
                "market_value": {
                  "USD": 45877.18693
                },
                "units": {
                  "RGAGX": 313.219
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\n\\nlet totalValue = 0;\\nconst assetClasses = {};\\nfor (let row of panel.queries[0].result) {\\n  if (!row.market_value[ledger.ccy]) continue;\\n\\n  const ccy = Object.keys(row.units)[0];\\n  const value = row.market_value[ledger.ccy];\\n  const assetName = ledger.commodities[ccy]?.meta.name ?? ccy;\\n  const assetClass = ledger.commodities[ccy]?.meta.asset_class ?? \\"undefined\\";\\n  if (!(assetClass in assetClasses)) {\\n    assetClasses[assetClass] = { name: assetClass, children: [] };\\n  }\\n  assetClasses[assetClass].children.push({ name: assetName, value });\\n  totalValue += value;\\n}\\n\\nreturn {\\n  tooltip: {\\n    formatter: (params) =\\u003e\\n      \`\${params.marker} \${params.name} \\u003cspan style=\\"padding-left: 15px; font-weight: bold;\\"\\u003e\${currencyFormat.format(\\n        params.value,\\n      )}\\u003c/span\\u003e (\${((params.value / totalValue) * 100).toFixed(0)}%)\`,\\n  },\\n  series: [\\n    {\\n      type: \\"sunburst\\",\\n      radius: \\"100%\\",\\n      label: {\\n        show: false,\\n      },\\n      data: Object.values(assetClasses),\\n    },\\n  ],\\n};\\n",
        "title": "Investment Classes \\ud83c\\udfe6",
        "type": "echarts",
        "width": "50%"
      },
      {
        "queries": [
          {
            "bql": "SELECT UNITS(SUM(position)) as units, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) as market_value\\nWHERE account_sortkey(account) ~ \\u0027^[01]\\u0027\\nGROUP BY currency, cost_currency\\nORDER BY market_value\\n",
            "result": [
              {
                "market_value": {
                  "USD": 1849.80
                },
                "units": {
                  "USD": 1849.80
                }
              },
              {
                "market_value": {
                  "USD": 3850.56
                },
                "units": {
                  "VHT": 16
                }
              },
              {
                "market_value": {
                  "USD": 4457.40
                },
                "units": {
                  "VEA": 19
                }
              },
              {
                "market_value": {
                  "USD": 4975.95
                },
                "units": {
                  "ITOT": 49
                }
              },
              {
                "market_value": {
                  "USD": 7517.64
                },
                "units": {
                  "GLD": 52
                }
              },
              {
                "market_value": {
                  "USD": 28014.42410
                },
                "units": {
                  "VBMPX": 175.474
                }
              },
              {
                "market_value": {
                  "USD": 45877.18693
                },
                "units": {
                  "RGAGX": 313.219
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\n\\nlet totalValue = 0;\\nconst root = { children: [] };\\nfor (let row of panel.queries[0].result) {\\n  if (!row.market_value[ledger.ccy]) continue;\\n\\n  const ccy = Object.keys(row.units)[0];\\n  const allocations = Object.entries(ledger.commodities[ccy]?.meta ?? {}).filter(([k, v]) =\\u003e\\n    k.startsWith(\\"asset_allocation_\\"),\\n  );\\n  if (allocations.length === 0) {\\n    allocations.push([\\"asset_allocation_Unknown\\", 100]);\\n  }\\n\\n  for (let [allocation, percentage] of allocations) {\\n    const parts = allocation.substr(\\"asset_allocation_\\".length).split(\\"_\\");\\n    let node = root;\\n    for (const part of parts) {\\n      let child = node.children.find((c) =\\u003e c.name == part);\\n      if (!child) {\\n        child = { name: part, children: [] };\\n        node.children.push(child);\\n      }\\n      node = child;\\n    }\\n\\n    const value = (percentage / 100) * row.market_value[ledger.ccy];\\n    node.value = (node.value ?? 0) + value;\\n    totalValue += value;\\n  }\\n}\\n\\nreturn {\\n  tooltip: {\\n    formatter: (params) =\\u003e\\n      \`\${params.marker} \${params.name} \\u003cspan style=\\"padding-left: 15px; font-weight: bold;\\"\\u003e\${currencyFormat.format(\\n        params.value,\\n      )}\\u003c/span\\u003e (\${((params.value / totalValue) * 100).toFixed(0)}%)\`,\\n  },\\n  series: [\\n    {\\n      type: \\"sunburst\\",\\n      radius: \\"100%\\",\\n      label: {\\n        rotate: \\"tangential\\",\\n        minAngle: 20,\\n      },\\n      labelLayout: {\\n        hideOverlap: true,\\n      },\\n      data: root.children,\\n    },\\n  ],\\n};\\n",
        "title": "Assets Allocation \\ud83c\\udfe6",
        "type": "echarts",
        "width": "50%"
      },
      {
        "queries": [
          {
            "bql": "SELECT UNITS(SUM(position)) as units, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) as market_value\\nWHERE account_sortkey(account) ~ \\u0027^[01]\\u0027 AND currency != \\u0027{{ledger.ccy}}\\u0027\\nGROUP BY currency, cost_currency\\nORDER BY market_value\\n",
            "result": [
              {
                "market_value": {
                  "USD": 3850.56
                },
                "units": {
                  "VHT": 16
                }
              },
              {
                "market_value": {
                  "USD": 4457.40
                },
                "units": {
                  "VEA": 19
                }
              },
              {
                "market_value": {
                  "USD": 4975.95
                },
                "units": {
                  "ITOT": 49
                }
              },
              {
                "market_value": {
                  "USD": 7517.64
                },
                "units": {
                  "GLD": 52
                }
              },
              {
                "market_value": {
                  "USD": 28014.42410
                },
                "units": {
                  "VBMPX": 175.474
                }
              },
              {
                "market_value": {
                  "USD": 45877.18693
                },
                "units": {
                  "RGAGX": 313.219
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\n\\nlet totalValue = 0;\\nconst root = { children: [] };\\nfor (let row of panel.queries[0].result) {\\n  if (!row.market_value[ledger.ccy]) continue;\\n\\n  const ccy = Object.keys(row.units)[0];\\n  const allocations = Object.entries(ledger.commodities[ccy]?.meta ?? {}).filter(([k, v]) =\\u003e\\n    k.startsWith(\\"asset_allocation_\\"),\\n  );\\n  if (allocations.length === 0) {\\n    allocations.push([\\"asset_allocation_Unknown\\", 100]);\\n  }\\n\\n  for (let [allocation, percentage] of allocations) {\\n    const parts = allocation.substr(\\"asset_allocation_\\".length).split(\\"_\\");\\n    let node = root;\\n    for (const part of parts) {\\n      let child = node.children.find((c) =\\u003e c.name == part);\\n      if (!child) {\\n        child = { name: part, children: [] };\\n        node.children.push(child);\\n      }\\n      node = child;\\n    }\\n\\n    const value = (percentage / 100) * row.market_value[ledger.ccy];\\n    node.value = (node.value ?? 0) + value;\\n    totalValue += value;\\n  }\\n}\\n\\nreturn {\\n  tooltip: {\\n    formatter: (params) =\\u003e\\n      \`\${params.marker} \${params.name} \\u003cspan style=\\"padding-left: 15px; font-weight: bold;\\"\\u003e\${currencyFormat.format(\\n        params.value,\\n      )}\\u003c/span\\u003e (\${((params.value / totalValue) * 100).toFixed(0)}%)\`,\\n  },\\n  series: [\\n    {\\n      type: \\"sunburst\\",\\n      radius: \\"100%\\",\\n      label: {\\n        rotate: \\"tangential\\",\\n        minAngle: 20,\\n      },\\n      labelLayout: {\\n        hideOverlap: true,\\n      },\\n      data: root.children,\\n    },\\n  ],\\n};\\n",
        "title": "Investments Allocation \\ud83c\\udfe6",
        "type": "echarts",
        "width": "50%"
      }
    ]
  },
  "ledger": {
    "ccy": "USD",
    "commodities": {
      "GLD": {
        "currency": "GLD",
        "date": "2004-11-01",
        "meta": {
          "asset_allocation_Commodity_Gold": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:GLD",
          
          "lineno": 52,
          "name": "SPDR Gold Trust (ETF)",
          "price": "USD:google/NYSEARCA:GLD"
        }
      },
      "ITOT": {
        "currency": "ITOT",
        "date": "2004-01-20",
        "meta": {
          "asset_allocation_Equity_Market_NonUS": 1,
          "asset_allocation_Equity_Market_US": 99,
          "asset_class": "ETF",
          "export": "NYSEARCA:ITOT",
          
          "lineno": 37,
          "name": "iShares Core S\\u0026P Total U.S. Stock Market ETF",
          "price": "USD:google/NYSEARCA:ITOT"
        }
      },
      "RGAGX": {
        "currency": "RGAGX",
        "date": "2009-05-01",
        "meta": {
          "asset_allocation_Bond_Cash": 10,
          "asset_allocation_Equity_Market_NonUS": 11,
          "asset_allocation_Equity_Market_US": 79,
          "asset_class": "Fund",
          "export": "MUTF:RGAGX",
          
          "lineno": 66,
          "name": "American Funds The Growth Fund of America Class R-6",
          "price": "USD:google/MUTF:RGAGX"
        }
      },
      "USD": {
        "currency": "USD",
        "date": "1792-01-01",
        "meta": {
          "asset_allocation_Bond_Cash": 100,
          "asset_class": "Cash",
          "export": "CASH",
          
          "lineno": 16,
          "name": "US Dollar"
        }
      },
      "VBMPX": {
        "currency": "VBMPX",
        "date": "1995-09-18",
        "meta": {
          "asset_allocation_Bond_NonUS": 9,
          "asset_allocation_Bond_US": 91,
          "asset_class": "Fund",
          "export": "MUTF:VBMPX",
          
          "lineno": 29,
          "name": "Vanguard Total Bond Market Index Fund Institutional Plus Shares",
          "price": "USD:google/MUTF:VBMPX"
        }
      },
      "VEA": {
        "currency": "VEA",
        "date": "2007-07-20",
        "meta": {
          "asset_allocation_Equity_Market_DevelopedWorld": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:VEA",
          
          "lineno": 59,
          "name": "Vanguard FTSE Developed Markets ETF",
          "price": "USD:google/NYSEARCA:VEA"
        }
      },
      "VHT": {
        "currency": "VHT",
        "date": "2004-01-26",
        "meta": {
          "asset_allocation_Equity_Sector_Health": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:VHT",
          
          "lineno": 45,
          "name": "Vanguard Health Care ETF",
          "price": "USD:google/NYSEARCA:VHT"
        }
      },
      "VMMXX": {
        "currency": "VMMXX",
        "date": "1900-01-01",
        "meta": {
          "asset_allocation_Bond_Cash": 82,
          "asset_allocation_Bond_US": 18,
          "asset_class": "Fund",
          "export": "MUTF:VMMXX (MONEY:USD)",
          
          "lineno": 22,
          "name": "Vanguard Cash Reserves Federal Money Market Fund"
        }
      }
    },
    "dateFirst": "2020-01-01",
    "dateLast": "2022-02-28",
    "operatingCurrencies": [
      "USD"
    ]
  }
}
</script>
<div class="headerline">
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=0">
      Overview
    </a>
  </h3>
  <h3>
    Assets
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=2">
      Income and Expenses
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=3">
      Travelling
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=4">
      Sankey
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=5">
      Projection
    </a>
  </h3>
</div>
<div id="dashboard">
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      Assets 🏦
    </h2>
    <div id="panel0"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 699px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="699"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="699"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="none"
                  stroke="#5470c6"
            >
            </path>
            <path fill="none"
                  stroke="#91cc75"
            >
            </path>
            <path fill="none"
                  stroke="#fac858"
            >
            </path>
            <path fill="none"
                  stroke="#ee6666"
            >
            </path>
            <path fill="none"
                  stroke="#73c0de"
            >
            </path>
            <path fill="none"
                  stroke="#3ba272"
            >
            </path>
            <path fill="none"
                  stroke="#fc8452"
            >
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#fc8452">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#333"
                  stroke="rgb(255,255,255)"
                  stroke-width="2"
                  paint-order="stroke"
                  stroke-miterlimit="2"
            >
              USD
            </text>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#333"
                  stroke="rgb(255,255,255)"
                  stroke-width="2"
                  paint-order="stroke"
                  stroke-miterlimit="2"
            >
              VHT
            </text>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#333"
                  stroke="rgb(255,255,255)"
                  stroke-width="2"
                  paint-order="stroke"
                  stroke-miterlimit="2"
            >
              VEA
            </text>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#333"
                  stroke="rgb(255,255,255)"
                  stroke-width="2"
                  paint-order="stroke"
                  stroke-miterlimit="2"
            >
              ITOT
            </text>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#333"
                  stroke="rgb(255,255,255)"
                  stroke-width="2"
                  paint-order="stroke"
                  stroke-miterlimit="2"
            >
              GLD
            </text>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#333"
                  stroke="rgb(255,255,255)"
                  stroke-width="2"
                  paint-order="stroke"
                  stroke-miterlimit="2"
            >
              VBMPX
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#333"
                  stroke="rgb(255,255,255)"
                  stroke-width="2"
                  paint-order="stroke"
                  stroke-miterlimit="2"
            >
              RGAGX
            </text>
          </g>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      <a href="/beancount/income_statement/">
        Net Worth 💰
      </a>
    </h2>
    <div id="panel1"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 699px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="699"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="699"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
                  stroke-linecap="round"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $0
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $20,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $40,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $60,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $80,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $100,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2022
            </text>
            <g clip-path="url(#zr1-c0)">
              <path fill="none"
                    stroke="#5470c6"
                    stroke-width="2"
                    stroke-linejoin="bevel"
              >
              </path>
            </g>
            <path transform="matrix(2,0,0,2,80.6538,251.0662)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,102.1615,242.4367)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,123.6692,233.7751)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,145.1769,225.5778)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,166.6846,217.3657)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,188.1923,210.0239)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,209.7,193.3484)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,231.2077,190.3142)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,252.7154,184.0774)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,274.2231,178.591)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,295.7308,175.63)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,317.2385,161.2669)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,338.7462,206.5468)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,360.2538,196.9396)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,381.7615,190.2834)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,403.2692,180.4187)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,424.7769,171.5615)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,446.2846,158.2018)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,467.7923,137.0826)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,489.3,124.6851)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,510.8077,120.9733)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,532.3154,113.8432)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,553.8231,110.4464)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,575.3307,92.2325)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,596.8384,85.2957)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,618.3461,69.334)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
          </g>
          <defs>
            <clipPath id="zr1-c0">
              <path fill="#000">
              </path>
            </clipPath>
          </defs>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      Portfolio 📈
    </h2>
    <div id="panel2"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 699px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="699"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="699"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
                  stroke-linecap="round"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $0
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $20,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $40,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $60,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $80,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $100,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2022
            </text>
            <g clip-path="url(#zr2-c0)">
              <path fill="none"
                    stroke="#5470c6"
                    stroke-width="2"
                    stroke-linejoin="bevel"
              >
              </path>
            </g>
            <g clip-path="url(#zr2-c1)">
              <path fill="none"
                    stroke="#91cc75"
                    stroke-width="2"
                    stroke-linejoin="bevel"
              >
              </path>
            </g>
            <path transform="matrix(2,0,0,2,80.6538,320.2493)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,102.1615,310.4992)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,123.6692,295.1696)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,145.1769,285.4571)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,166.6846,275.342)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,188.1923,265.8919)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,209.7,254.4224)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,231.2077,254.4359)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,274.2231,244.0864)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,317.2385,232.7346)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,338.7462,227.1754)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,360.2538,215.5043)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,381.7615,199.5829)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,403.2692,189.825)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,424.7769,178.7553)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,446.2846,163.4971)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,467.7923,148.9469)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,489.3,135.7301)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,510.8077,124.4668)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,532.3154,112.3341)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,553.8231,117.1521)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,575.3307,95.7286)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,596.8384,86.6908)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,618.3461,74.3285)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,80.6538,320.28)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,102.1615,310.5598)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,123.6692,295.9801)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,145.1769,286.26)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,166.6846,276.5399)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,188.1923,266.8198)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,209.7,257.1)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,231.2077,255.075)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,274.2231,246.9324)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,317.2385,235.0952)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,338.7462,230.2352)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,360.2538,220.5151)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,381.7615,205.9352)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,403.2692,197.4093)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,424.7769,187.689)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,446.2846,177.9687)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,467.7923,168.2492)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,489.3,161.3639)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,510.8077,147.9324)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,532.3154,137.8869)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,553.8231,140.6886)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,575.3307,125.7086)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,596.8384,115.9891)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,618.3461,106.2687)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path fill="rgb(0,0,0)"
                  fill-opacit
                  stroke="#ccc"
                  stroke-width="0"
            >
            </path>
            <path fill="#000"
                  stroke="#5470c6"
                  stroke-width="2"
                  stroke-linecap="butt"
                  stroke-miterlimit="10"
            >
            </path>
            <path fill="#fff"
                  stroke="#5470c6"
                  stroke-width="2"
                  stroke-linecap="butt"
                  stroke-miterlimit="10"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  xml:space="preserve"
                  x="30"
                  fill="#333"
            >
              Market Value
            </text>
            <path fill="#000"
                  stroke="#91cc75"
                  stroke-width="2"
                  stroke-linecap="butt"
                  stroke-miterlimit="10"
            >
            </path>
            <path fill="#fff"
                  stroke="#91cc75"
                  stroke-width="2"
                  stroke-linecap="butt"
                  stroke-miterlimit="10"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  xml:space="preserve"
                  x="30"
                  fill="#333"
            >
              Book Value
            </text>
          </g>
          <defs>
            <clipPath id="zr2-c0">
              <path fill="#000">
              </path>
            </clipPath>
            <clipPath id="zr2-c1">
              <path fill="#000">
              </path>
            </clipPath>
          </defs>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      Portfolio Gains ✨
    </h2>
    <div id="panel3"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 699px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="699"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="699"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
                  stroke-linecap="round"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $0
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $2,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $4,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $6,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $8,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $10,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $12,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2022
            </text>
            <g clip-path="url(#zr3-c0)">
              <path fill="none"
                    stroke="#5470c6"
                    stroke-width="2"
                    stroke-linejoin="bevel"
              >
              </path>
            </g>
            <path transform="matrix(2,0,0,2,80.6538,329.744)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,102.1615,329.4951)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,123.6692,323.2463)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,145.1769,323.3091)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,166.6846,320.017)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,188.1923,322.268)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,209.7,307.6865)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,231.2077,324.6742)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,274.2231,306.283)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,317.2385,310.3278)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,338.7462,304.5022)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,360.2538,288.2433)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,381.7615,277.0642)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,403.2692,266.7975)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,424.7769,255.553)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,446.2846,209.4027)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,467.7923,169.1477)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,489.3,116.3855)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,510.8077,134.4536)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,532.3154,117.0597)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,553.8231,133.8624)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,575.3307,80.1665)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,596.8384,85.8474)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,618.3461,63.8317)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
          </g>
          <defs>
            <clipPath id="zr3-c0">
              <path fill="#000">
              </path>
            </clipPath>
          </defs>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      Asset Classes 🏦
    </h2>
    <div id="panel4"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 699px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="699"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="699"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="#91cc75"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(172,216,151)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(172,216,151)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#fac858"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(251,213,129)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(251,213,129)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(251,213,129)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(251,213,129)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#ee6666"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(242,140,140)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
          </g>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      Investment Classes 🏦
    </h2>
    <div id="panel5"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 699px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="699"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="699"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="#91cc75"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(172,216,151)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(172,216,151)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#fac858"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(251,213,129)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(251,213,129)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(251,213,129)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(251,213,129)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
          </g>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      Assets Allocation 🏦
    </h2>
    <div id="panel6"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 699px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="699"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="699"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="#91cc75"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(163,212,140)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(163,212,140)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#fac858"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(250,209,115)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(250,209,115)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(250,209,115)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#ee6666"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(240,127,127)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.204,-0.979,0.979,0.204,382.1349,206.7878)"
                  fill="#333"
            >
              Equity
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.08,-0.997,0.997,0.08,449.182,207.9684)"
                  fill="#333"
            >
              Market
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.229,0.973,-0.973,0.229,511.7352,161.8228)"
                  fill="#333"
            >
              US
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.04,0.999,-0.999,0.04,316.1927,201.3184)"
                  fill="#333"
            >
              Bond
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.325,0.946,-0.946,0.325,254.9311,232.5073)"
                  fill="#333"
            >
              US
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.65,-0.76,0.76,0.65,273.5311,134.9713)"
                  fill="#333"
            >
              Cash
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.97,-0.242,0.242,0.97,341.4267,167.6591)"
                  fill="#333"
            >
              Commodity
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.97,-0.242,0.242,0.97,325.2802,102.9773)"
                  fill="#333"
            >
              Gold
            </text>
          </g>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      Investments Allocation 🏦
    </h2>
    <div id="panel7"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 699px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="699"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="699"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="#91cc75"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(163,212,140)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(163,212,140)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#fac858"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(250,209,115)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(250,209,115)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(250,209,115)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#ee6666"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(240,127,127)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.237,-0.971,0.971,0.237,381.8798,207.9157)"
                  fill="#333"
            >
              Equity
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.112,-0.994,0.994,0.112,448.8733,211.1778)"
                  fill="#333"
            >
              Market
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.204,0.979,-0.979,0.204,512.6787,166.0811)"
                  fill="#333"
            >
              US
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.01,1,-1,0.01,316.1682,200.3216)"
                  fill="#333"
            >
              Bond
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.243,0.97,-0.97,0.243,252.4985,224.3043)"
                  fill="#333"
            >
              US
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.969,-0.247,0.247,0.969,341.2723,167.6981)"
                  fill="#333"
            >
              Commodity
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.969,-0.247,0.247,0.969,324.8168,103.0942)"
                  fill="#333"
            >
              Gold
            </text>
          </g>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
</div>
<script type="application/json"
        id="page-title"
>
  "Dashboards"
</script>
`;

exports[`Dashboard: HTML Snapshot Tests Income and Expenses 1`] = `
<style type="text/css">
  #dashboard {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}
#dashboard .panel {
    padding: 20px;
    min-width: 300px;
}
#dashboard .panel h2 {
    text-align: center;
}
#dashboard a {
    color: #333;
}

/* set panel min-width to 100% on screens
  < 802px (navbar + padding + 2*300px) */
@media (max-width: 802px) {
    #dashboard .panel {
        min-width: 100%;
    }
}
</style>
<script id="favaDashboardsBootstrap"
        type="application/json"
>
  {
  "dashboard": {
    "name": "Income and Expenses",
    "panels": [
      {
        "height": "80px",
        "link": "/beancount/account/Income/?r=changes",
        "queries": [
          {
            "bql": "SELECT CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) AS value WHERE account ~ \\u0027^Income:\\u0027",
            "result": [
              {
                "value": {
                  "USD": -286173.12
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst days = (new Date(ledger.dateLast) - new Date(ledger.dateFirst)) / (1000 * 60 * 60 * 24) + 1;\\nconst months = days / (365 / 12);\\nconst value = currencyFormat.format(-panel.queries[0].result[0].value[ledger.ccy] / months);\\nreturn \`\\u003cdiv style=\\"font-size: 40px; font-weight: bold; color: #3daf46; text-align: center;\\"\\u003e\${value}\\u003c/div\\u003e\`;\\n",
        "title": "Avg. Income per Month \\ud83d\\udcb0",
        "type": "html",
        "width": "33.3%"
      },
      {
        "height": "80px",
        "link": "/beancount/account/Expenses/?r=changes",
        "queries": [
          {
            "bql": "SELECT CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) AS value WHERE account ~ \\u0027^Expenses:\\u0027",
            "result": [
              {
                "value": {
                  "USD": 224323.61
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst days = (new Date(ledger.dateLast) - new Date(ledger.dateFirst)) / (1000 * 60 * 60 * 24) + 1;\\nconst months = days / (365 / 12);\\nconst value = currencyFormat.format(panel.queries[0].result[0].value[ledger.ccy] / months);\\nreturn \`\\u003cdiv style=\\"font-size: 40px; font-weight: bold; color: #af3d3d; text-align: center;\\"\\u003e\${value}\\u003c/div\\u003e\`;\\n",
        "title": "Avg. Expenses per Month \\ud83d\\udcb8",
        "type": "html",
        "width": "33.3%"
      },
      {
        "height": "80px",
        "link": "/beancount/income_statement/",
        "queries": [
          {
            "bql": "SELECT CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) AS value WHERE account ~ \\u0027^Income:\\u0027",
            "result": [
              {
                "value": {
                  "USD": -286173.12
                }
              }
            ]
          },
          {
            "bql": "SELECT CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) AS value WHERE account ~ \\u0027^Expenses:\\u0027",
            "result": [
              {
                "value": {
                  "USD": 224323.61
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst percentFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"percent\\",\\n  maximumFractionDigits: 0,\\n});\\nconst days = (new Date(ledger.dateLast) - new Date(ledger.dateFirst)) / (1000 * 60 * 60 * 24) + 1;\\nconst months = days / (365 / 12);\\nconst income = -panel.queries[0].result[0].value[ledger.ccy];\\nconst expenses = panel.queries[1].result[0].value[ledger.ccy];\\nconst rate = (income - expenses) / months;\\nconst ratePercent = 1 - expenses / income;\\nconst value = \`\${currencyFormat.format(rate)} (\${percentFormat.format(ratePercent)})\`;\\nreturn \`\\u003cdiv style=\\"font-size: 40px; font-weight: bold; color: #3daf46; text-align: center;\\"\\u003e\${value}\\u003c/div\\u003e\`;\\n",
        "title": "Avg. Savings per Month \\u2728",
        "type": "html",
        "width": "33.3%"
      },
      {
        "link": "/beancount/account/Income/?r=changes",
        "queries": [
          {
            "bql": "SELECT root(account, 4) AS account, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) AS value\\nWHERE account ~ \\u0027^Income:\\u0027\\nGROUP BY account\\n",
            "link": "/beancount/account/{account}/?r=changes\\u0026time={time}",
            "result": [
              {
                "account": "Income:US:Hooli:Salary",
                "value": {
                  "USD": -263076.66
                }
              },
              {
                "account": "Income:US:Hooli:GroupTermLife",
                "value": {
                  "USD": -1386.24
                }
              },
              {
                "account": "Income:US:Hooli:Match401k",
                "value": {
                  "USD": -20900.00
                }
              },
              {
                "account": "Income:US:ETrade:ITOT",
                "value": {
                  "USD": -29.60
                }
              },
              {
                "account": "Income:US:ETrade:VEA",
                "value": {
                  "USD": -29.60
                }
              },
              {
                "account": "Income:US:ETrade:PnL",
                "value": {
                  "USD": -550.50
                }
              },
              {
                "account": "Income:US:ETrade:GLD",
                "value": {
                  "USD": -135.55
                }
              },
              {
                "account": "Income:US:ETrade:VHT",
                "value": {
                  "USD": -64.97
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst days = (new Date(ledger.dateLast) - new Date(ledger.dateFirst)) / (1000 * 60 * 60 * 24) + 1;\\nconst divisor = days / (365 / 12);\\nconst accountTree = helpers.buildAccountTree(\\n  panel.queries[0].result,\\n  (row) =\\u003e -row.value[ledger.ccy] / divisor,\\n  (parts, i) =\\u003e parts[i],\\n);\\n// use click event on desktop, dblclick on mobile\\nconst clickEvt = window.screen.width \\u003c 800 ? \\"onDblClick\\" : \\"onClick\\";\\n\\nreturn {\\n  tooltip: {\\n    valueFormatter: currencyFormat.format,\\n  },\\n  series: [\\n    {\\n      type: \\"sunburst\\",\\n      radius: \\"100%\\",\\n      label: {\\n        minAngle: 20,\\n      },\\n      nodeClick: false,\\n      data: accountTree.children[0].children,\\n    },\\n  ],\\n  [clickEvt]: (event) =\\u003e {\\n    const account = \\"Income\\" + event.treePathInfo.map((i) =\\u003e i.name).join(\\":\\");\\n    const time = new URLSearchParams(window.location.search).get(\\"time\\") ?? \\"\\";\\n    const link = panel.queries[0].link.replaceAll(\\"#\\", \\"%23\\").replace(\\"{account}\\", account).replace(\\"{time}\\", time);\\n    window.open(link);\\n  },\\n};\\n",
        "title": "Income Categories (per month) \\ud83d\\udcb8",
        "type": "echarts",
        "width": "50%"
      },
      {
        "link": "/beancount/account/Expenses/?r=changes",
        "queries": [
          {
            "bql": "SELECT root(account, 3) AS account, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) AS value\\nWHERE account ~ \\u0027^Expenses:\\u0027\\nGROUP BY account\\n",
            "link": "/beancount/account/{account}/?r=changes\\u0026time={time}",
            "result": [
              {
                "account": "Expenses:Health:Life",
                "value": {
                  "USD": 1386.24
                }
              },
              {
                "account": "Expenses:Health:Dental",
                "value": {
                  "USD": 165.30
                }
              },
              {
                "account": "Expenses:Health:Medical",
                "value": {
                  "USD": 1560.66
                }
              },
              {
                "account": "Expenses:Health:Vision",
                "value": {
                  "USD": 2411.10
                }
              },
              {
                "account": "Expenses:Taxes:Y2020",
                "value": {
                  "USD": 54306.23
                }
              },
              {
                "account": "Expenses:Food:Restaurant",
                "value": {
                  "USD": 10863.58
                }
              },
              {
                "account": "Expenses:Financial:Fees",
                "value": {
                  "USD": 104.00
                }
              },
              {
                "account": "Expenses:Housing:Rent",
                "value": {
                  "USD": 60000.00
                }
              },
              {
                "account": "Expenses:Housing:Electricity",
                "value": {
                  "USD": 1625.00
                }
              },
              {
                "account": "Expenses:Food:Groceries",
                "value": {
                  "USD": 4838.44
                }
              },
              {
                "account": "Expenses:Housing:Phone",
                "value": {
                  "USD": 1429.78
                }
              },
              {
                "account": "Expenses:Housing:Internet",
                "value": {
                  "USD": 1999.71
                }
              },
              {
                "account": "Expenses:Transport:Tram",
                "value": {
                  "USD": 2880.00
                }
              },
              {
                "account": "Expenses:Food:Coffee",
                "value": {
                  "USD": 117.49
                }
              },
              {
                "account": "Expenses:Financial:Commissions",
                "value": {
                  "USD": 214.80
                }
              },
              {
                "account": "Expenses:Taxes:Y2021",
                "value": {
                  "USD": 51477.20
                }
              },
              {
                "account": "Expenses:Wedding",
                "value": {
                  "USD": 20000.00
                }
              },
              {
                "account": "Expenses:Food:Alcohol",
                "value": {
                  "USD": 75.28
                }
              },
              {
                "account": "Expenses:Taxes:Y2022",
                "value": {
                  "USD": 7968.80
                }
              },
              {
                "account": "Expenses:Shopping:Electronics",
                "value": {
                  "USD": 900.00
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst days = (new Date(ledger.dateLast) - new Date(ledger.dateFirst)) / (1000 * 60 * 60 * 24) + 1;\\nconst divisor = days / (365 / 12);\\nconst accountTree = helpers.buildAccountTree(\\n  panel.queries[0].result,\\n  (row) =\\u003e row.value[ledger.ccy] / divisor,\\n  (parts, i) =\\u003e parts[i],\\n);\\n// use click event on desktop, dblclick on mobile\\nconst clickEvt = window.screen.width \\u003c 800 ? \\"onDblClick\\" : \\"onClick\\";\\n\\nreturn {\\n  tooltip: {\\n    valueFormatter: currencyFormat.format,\\n  },\\n  series: [\\n    {\\n      type: \\"sunburst\\",\\n      radius: \\"100%\\",\\n      label: {\\n        minAngle: 20,\\n      },\\n      nodeClick: false,\\n      data: accountTree.children[0].children,\\n    },\\n  ],\\n  [clickEvt]: (event) =\\u003e {\\n    const account = \\"Expenses\\" + event.treePathInfo.map((i) =\\u003e i.name).join(\\":\\");\\n    const time = new URLSearchParams(window.location.search).get(\\"time\\") ?? \\"\\";\\n    const link = panel.queries[0].link.replaceAll(\\"#\\", \\"%23\\").replace(\\"{account}\\", account).replace(\\"{time}\\", time);\\n    window.open(link);\\n  },\\n};\\n",
        "title": "Expenses Categories (per month) \\ud83d\\udcb8",
        "type": "echarts",
        "width": "50%"
      },
      {
        "link": "/beancount/income_statement/?filter=#recurring",
        "queries": [
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:\\u0027 AND \\u0027recurring\\u0027 IN tags\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses/?filter=#recurring\\u0026time={time}",
            "name": "Recurring",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": 2400.00
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 2400.00
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": 2400.00
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": 2400.00
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": 2400.00
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": 2400.00
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 2400.00
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": 2400.00
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": 2400.00
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": 2400.00
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": 2400.00
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": 2400.00
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": 2400.00
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": 2400.00
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": 2400.00
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": 2400.00
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": 2400.00
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 2400.00
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 2400.00
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": 2400.00
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": 2400.00
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": 2400.00
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": 2400.00
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 2400.00
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 2400.00
                },
                "year": 2022
              }
            ],
            "stack": "expenses"
          },
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:\\u0027 AND NOT \\u0027recurring\\u0027 IN tags\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses/?filter=-#recurring\\u0026time={time}",
            "name": "Irregular",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": 6959.46
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 4894.35
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": 5149.13
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": 5040.59
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": 5184.19
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": 5260.18
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 7441.06
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": 5000.61
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": 5081.29
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": 5152.96
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": 5160.97
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": 6671.01
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": 25108.68
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": 5243.78
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": 6140.60
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": 5063.60
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": 5298.69
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 5227.87
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 7286.29
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": 4882.71
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": 5022.02
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": 5011.69
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": 4988.12
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 7249.87
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 5257.75
                },
                "year": 2022
              },
              {
                "month": 2,
                "value": {
                  "USD": 5546.14
                },
                "year": 2022
              }
            ],
            "stack": "expenses"
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst months = helpers.iterateMonths(ledger.dateFirst, ledger.dateLast).map((m) =\\u003e \`\${m.month}/\${m.year}\`);\\n\\n// the beancount query only returns months where there was at least one matching transaction, therefore we group by month\\nconst amounts = {};\\nfor (let query of panel.queries) {\\n  amounts[query.name] = {};\\n  for (let row of query.result) {\\n    amounts[query.name][\`\${row.month}/\${row.year}\`] =\\n      query.stack == \\"income\\" ? -row.value[ledger.ccy] : row.value[ledger.ccy];\\n  }\\n}\\n\\nconst series = panel.queries.map((query) =\\u003e ({\\n  type: \\"bar\\",\\n  name: query.name,\\n  stack: query.stack,\\n  data: months.map((month) =\\u003e amounts[query.name][month] ?? 0),\\n}));\\n\\nreturn {\\n  tooltip: {\\n    valueFormatter: currencyFormat.format,\\n  },\\n  legend: {\\n    top: \\"bottom\\",\\n  },\\n  xAxis: {\\n    data: months,\\n  },\\n  yAxis: {\\n    axisLabel: {\\n      formatter: currencyFormat.format,\\n    },\\n  },\\n  series,\\n  onClick: (event) =\\u003e {\\n    const query = panel.queries.find((q) =\\u003e q.name === event.seriesName);\\n    if (query) {\\n      const [month, year] = event.name.split(\\"/\\");\\n      const link = query.link.replaceAll(\\"#\\", \\"%23\\").replace(\\"{time}\\", \`\${year}-\${month.padStart(2, \\"0\\")}\`);\\n      window.open(link);\\n    }\\n  },\\n};\\n",
        "title": "Recurring Expenses \\ud83d\\udd01",
        "type": "echarts",
        "width": "50%"
      },
      {
        "link": "/beancount/account/Expenses:Food/",
        "queries": [
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:Food:\\u0027\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses:Food/?time={time}",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": 365.30
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 506.08
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": 644.69
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": 537.65
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": 567.35
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": 881.02
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 850.01
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": 525.50
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": 572.60
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": 613.43
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": 657.43
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": 668.19
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": 606.82
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": 859.81
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": 518.47
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": 506.12
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": 784.51
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 702.60
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 666.67
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": 379.61
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": 474.55
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": 487.32
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": 457.35
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 954.48
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 763.29
                },
                "year": 2022
              },
              {
                "month": 2,
                "value": {
                  "USD": 343.94
                },
                "year": 2022
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst months = helpers.iterateMonths(ledger.dateFirst, ledger.dateLast).map((m) =\\u003e \`\${m.month}/\${m.year}\`);\\nconst amounts = {};\\n\\n// the beancount query only returns months where there was at least one matching transaction, therefore we group by month\\nfor (let row of panel.queries[0].result) {\\n  amounts[\`\${row.month}/\${row.year}\`] = row.value[ledger.ccy];\\n}\\n\\nreturn {\\n  tooltip: {\\n    valueFormatter: currencyFormat.format,\\n  },\\n  xAxis: {\\n    data: months,\\n  },\\n  yAxis: {\\n    axisLabel: {\\n      formatter: currencyFormat.format,\\n    },\\n  },\\n  series: [\\n    {\\n      type: \\"line\\",\\n      smooth: true,\\n      data: months.map((month) =\\u003e amounts[month] ?? 0),\\n    },\\n  ],\\n  onClick: (event) =\\u003e {\\n    const [month, year] = event.name.split(\\"/\\");\\n    const link = panel.queries[0].link.replaceAll(\\"#\\", \\"%23\\").replace(\\"{time}\\", \`\${year}-\${month.padStart(2, \\"0\\")}\`);\\n    window.open(link);\\n  },\\n};\\n",
        "title": "Food Expenses \\ud83e\\udd50",
        "type": "echarts",
        "width": "50%"
      },
      {
        "queries": [
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:Housing:\\u0027 AND NOT \\u0027travel\\u0027 IN tags\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses:Housing/?filter=-#travel\\u0026time={time}",
            "name": "Housing",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": 2602.86
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 2606.07
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": 2602.24
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": 2600.74
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": 2594.64
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": 2596.96
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 2599.75
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": 2572.91
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": 2606.49
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": 2610.48
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": 2601.34
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": 2604.11
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": 2599.66
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": 2601.77
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": 2601.56
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": 2610.53
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": 2611.98
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 2623.07
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 2628.32
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": 2600.90
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": 2573.67
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": 2586.37
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": 2619.62
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 2606.19
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 2592.26
                },
                "year": 2022
              }
            ],
            "stack": "expenses"
          },
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:Food:\\u0027 AND NOT \\u0027travel\\u0027 IN tags\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses:Food/?filter=-#travel\\u0026time={time}",
            "name": "Food",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": 365.30
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 506.08
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": 644.69
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": 537.65
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": 567.35
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": 435.19
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 288.09
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": 525.50
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": 572.60
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": 613.43
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": 657.43
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": 668.19
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": 606.82
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": 546.92
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": 518.47
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": 506.12
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": 784.51
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 353.44
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 459.33
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": 379.61
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": 474.55
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": 487.32
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": 457.35
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 332.26
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 642.46
                },
                "year": 2022
              },
              {
                "month": 2,
                "value": {
                  "USD": 343.94
                },
                "year": 2022
              }
            ],
            "stack": "expenses"
          },
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:Shopping:\\u0027 AND NOT \\u0027travel\\u0027 IN tags\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses:Shopping/?filter=-#travel\\u0026time={time}",
            "name": "Shopping",
            "result": [
              {
                "month": 2,
                "value": {
                  "USD": 900.00
                },
                "year": 2022
              }
            ],
            "stack": "expenses"
          },
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:\\u0027 AND \\u0027travel\\u0027 IN tags\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses/?filter=#travel\\u0026time={time}",
            "name": "Travel",
            "result": [
              {
                "month": 6,
                "value": {
                  "USD": 445.83
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 561.92
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 312.89
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 349.16
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 207.34
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 622.22
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 120.83
                },
                "year": 2022
              }
            ],
            "stack": "expenses"
          },
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:\\u0027 AND NOT account ~ \\u0027^Expenses:(Housing|Food|Shopping):\\u0027 AND NOT \\u0027travel\\u0027 IN tags\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses/?filter=all(-account:\\"^Expenses:(Housing|Food|Shopping)\\") -#travel\\u0026time={time}",
            "name": "Other",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": 6391.30
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 4182.20
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": 4302.20
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": 4302.20
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": 4422.20
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": 4182.20
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 6391.30
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": 4302.20
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": 4302.20
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": 4329.05
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": 4302.20
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": 5798.71
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": 24302.20
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": 4182.20
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": 5420.57
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": 4346.95
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": 4302.20
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 4302.20
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 6391.30
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": 4302.20
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": 4373.80
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": 4338.00
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": 4311.15
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 6089.20
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 4302.20
                },
                "year": 2022
              },
              {
                "month": 2,
                "value": {
                  "USD": 4302.20
                },
                "year": 2022
              }
            ],
            "stack": "expenses"
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst months = [\\n  \\"January\\",\\n  \\"February\\",\\n  \\"March\\",\\n  \\"April\\",\\n  \\"Mai\\",\\n  \\"June\\",\\n  \\"July\\",\\n  \\"August\\",\\n  \\"September\\",\\n  \\"October\\",\\n  \\"November\\",\\n  \\"December\\",\\n];\\nconst years = helpers.iterateYears(ledger.dateFirst, ledger.dateLast);\\n\\n// the beancount query only returns months where there was at least one matching transaction, therefore we group by month\\nconst amounts = {};\\nfor (let query of panel.queries) {\\n  amounts[query.name] = {};\\n  for (let row of query.result) {\\n    amounts[query.name][\`\${row.month}/\${row.year}\`] = row.value[ledger.ccy];\\n  }\\n}\\n\\nlet series = [];\\nfor (let query of panel.queries) {\\n  for (let year of years) {\\n    series.push({\\n      type: \\"bar\\",\\n      name: query.name,\\n      stack: year,\\n      blub: 5,\\n      data: months.map((_, i) =\\u003e amounts[query.name][\`\${i + 1}/\${year}\`] ?? 0),\\n    });\\n  }\\n}\\n\\nreturn {\\n  tooltip: {\\n    formatter: (params) =\\u003e {\\n      const month = params.dataIndex + 1;\\n      const stackIdx = params.seriesIndex % years.length;\\n      const year = years[stackIdx];\\n      return \`\${params.seriesName}\\u003cbr\\u003e\${\\n        params.marker\\n      } \${month}/\${year} \\u003cspan style=\\"padding-left: 15px; font-weight: bold;\\"\\u003e\${currencyFormat.format(\\n        params.value,\\n      )}\\u003c/span\\u003e\`;\\n    },\\n  },\\n  legend: {\\n    top: \\"bottom\\",\\n  },\\n  xAxis: {\\n    data: months,\\n  },\\n  yAxis: {\\n    axisLabel: {\\n      formatter: currencyFormat.format,\\n    },\\n  },\\n  series,\\n  onClick: (event) =\\u003e {\\n    const query = panel.queries.find((q) =\\u003e q.name === event.seriesName);\\n    if (query) {\\n      const month = event.dataIndex + 1;\\n      const stackIdx = event.seriesIndex % years.length;\\n      const year = years[stackIdx];\\n      const link = query.link.replaceAll(\\"#\\", \\"%23\\").replace(\\"{time}\\", \`\${year}-\${month.toString().padStart(2, \\"0\\")}\`);\\n      window.open(link);\\n    }\\n  },\\n};\\n",
        "title": "Expenses Year-Over-Year \\ud83d\\udcb8",
        "type": "echarts"
      },
      {
        "queries": [
          {
            "bql": "SELECT date, payee, narration, position WHERE account ~ \\"^Expenses:\\" ORDER BY position DESC LIMIT 10",
            "result": [
              {
                "date": "2021-01-15",
                "narration": "Wedding",
                "payee": "",
                "position": {
                  "cost": null,
                  "units": {
                    "currency": "USD",
                    "number": 20000.00
                  }
                }
              },
              {
                "date": "2020-01-04",
                "narration": "Paying the rent",
                "payee": "RiverBank Properties",
                "position": {
                  "cost": null,
                  "units": {
                    "currency": "USD",
                    "number": 2400.00
                  }
                }
              },
              {
                "date": "2020-02-05",
                "narration": "Paying the rent",
                "payee": "RiverBank Properties",
                "position": {
                  "cost": null,
                  "units": {
                    "currency": "USD",
                    "number": 2400.00
                  }
                }
              },
              {
                "date": "2020-03-03",
                "narration": "Paying the rent",
                "payee": "RiverBank Properties",
                "position": {
                  "cost": null,
                  "units": {
                    "currency": "USD",
                    "number": 2400.00
                  }
                }
              },
              {
                "date": "2020-04-03",
                "narration": "Paying the rent",
                "payee": "RiverBank Properties",
                "position": {
                  "cost": null,
                  "units": {
                    "currency": "USD",
                    "number": 2400.00
                  }
                }
              },
              {
                "date": "2020-05-05",
                "narration": "Paying the rent",
                "payee": "RiverBank Properties",
                "position": {
                  "cost": null,
                  "units": {
                    "currency": "USD",
                    "number": 2400.00
                  }
                }
              },
              {
                "date": "2020-06-04",
                "narration": "Paying the rent",
                "payee": "RiverBank Properties",
                "position": {
                  "cost": null,
                  "units": {
                    "currency": "USD",
                    "number": 2400.00
                  }
                }
              },
              {
                "date": "2020-07-06",
                "narration": "Paying the rent",
                "payee": "RiverBank Properties",
                "position": {
                  "cost": null,
                  "units": {
                    "currency": "USD",
                    "number": 2400.00
                  }
                }
              },
              {
                "date": "2020-08-06",
                "narration": "Paying the rent",
                "payee": "RiverBank Properties",
                "position": {
                  "cost": null,
                  "units": {
                    "currency": "USD",
                    "number": 2400.00
                  }
                }
              },
              {
                "date": "2020-09-04",
                "narration": "Paying the rent",
                "payee": "RiverBank Properties",
                "position": {
                  "cost": null,
                  "units": {
                    "currency": "USD",
                    "number": 2400.00
                  }
                }
              }
            ]
          }
        ],
        "template": "\\u003ctable is=\\"sortable-table\\" class=\\"queryresults\\"\\u003e\\n  \\u003cthead\\u003e\\n    \\u003ctr\\u003e\\n      \\u003cth data-sort=\\"string\\"\\u003edate\\u003c/th\\u003e\\n      \\u003cth data-sort=\\"string\\"\\u003epayee\\u003c/th\\u003e\\n      \\u003cth data-sort=\\"string\\"\\u003enarration\\u003c/th\\u003e\\n      \\u003cth data-sort=\\"num\\"\\u003eposition\\u003c/th\\u003e\\n    \\u003c/tr\\u003e\\n  \\u003c/thead\\u003e\\n  \\u003ctbody\\u003e\\n    \\u003ctr\\u003e\\n      \\u003ctd\\u003e2021-01-15\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  \\n\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  Wedding\\n\\u003c/td\\u003e\\n\\n      \\u003ctd class=\\"num\\"\\u003e\\u003cspan class=\\"num\\" title=\\"US Dollar\\"\\u003e20000.00 USD\\u003c/span\\u003e\\u003c/td\\u003e\\n\\n    \\u003c/tr\\u003e\\n    \\u003ctr\\u003e\\n      \\u003ctd\\u003e2020-01-04\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  RiverBank Properties\\n\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  Paying the rent\\n\\u003c/td\\u003e\\n\\n      \\u003ctd class=\\"num\\"\\u003e\\u003cspan class=\\"num\\" title=\\"US Dollar\\"\\u003e2400.00 USD\\u003c/span\\u003e\\u003c/td\\u003e\\n\\n    \\u003c/tr\\u003e\\n    \\u003ctr\\u003e\\n      \\u003ctd\\u003e2020-02-05\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  RiverBank Properties\\n\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  Paying the rent\\n\\u003c/td\\u003e\\n\\n      \\u003ctd class=\\"num\\"\\u003e\\u003cspan class=\\"num\\" title=\\"US Dollar\\"\\u003e2400.00 USD\\u003c/span\\u003e\\u003c/td\\u003e\\n\\n    \\u003c/tr\\u003e\\n    \\u003ctr\\u003e\\n      \\u003ctd\\u003e2020-03-03\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  RiverBank Properties\\n\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  Paying the rent\\n\\u003c/td\\u003e\\n\\n      \\u003ctd class=\\"num\\"\\u003e\\u003cspan class=\\"num\\" title=\\"US Dollar\\"\\u003e2400.00 USD\\u003c/span\\u003e\\u003c/td\\u003e\\n\\n    \\u003c/tr\\u003e\\n    \\u003ctr\\u003e\\n      \\u003ctd\\u003e2020-04-03\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  RiverBank Properties\\n\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  Paying the rent\\n\\u003c/td\\u003e\\n\\n      \\u003ctd class=\\"num\\"\\u003e\\u003cspan class=\\"num\\" title=\\"US Dollar\\"\\u003e2400.00 USD\\u003c/span\\u003e\\u003c/td\\u003e\\n\\n    \\u003c/tr\\u003e\\n    \\u003ctr\\u003e\\n      \\u003ctd\\u003e2020-05-05\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  RiverBank Properties\\n\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  Paying the rent\\n\\u003c/td\\u003e\\n\\n      \\u003ctd class=\\"num\\"\\u003e\\u003cspan class=\\"num\\" title=\\"US Dollar\\"\\u003e2400.00 USD\\u003c/span\\u003e\\u003c/td\\u003e\\n\\n    \\u003c/tr\\u003e\\n    \\u003ctr\\u003e\\n      \\u003ctd\\u003e2020-06-04\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  RiverBank Properties\\n\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  Paying the rent\\n\\u003c/td\\u003e\\n\\n      \\u003ctd class=\\"num\\"\\u003e\\u003cspan class=\\"num\\" title=\\"US Dollar\\"\\u003e2400.00 USD\\u003c/span\\u003e\\u003c/td\\u003e\\n\\n    \\u003c/tr\\u003e\\n    \\u003ctr\\u003e\\n      \\u003ctd\\u003e2020-07-06\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  RiverBank Properties\\n\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  Paying the rent\\n\\u003c/td\\u003e\\n\\n      \\u003ctd class=\\"num\\"\\u003e\\u003cspan class=\\"num\\" title=\\"US Dollar\\"\\u003e2400.00 USD\\u003c/span\\u003e\\u003c/td\\u003e\\n\\n    \\u003c/tr\\u003e\\n    \\u003ctr\\u003e\\n      \\u003ctd\\u003e2020-08-06\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  RiverBank Properties\\n\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  Paying the rent\\n\\u003c/td\\u003e\\n\\n      \\u003ctd class=\\"num\\"\\u003e\\u003cspan class=\\"num\\" title=\\"US Dollar\\"\\u003e2400.00 USD\\u003c/span\\u003e\\u003c/td\\u003e\\n\\n    \\u003c/tr\\u003e\\n    \\u003ctr\\u003e\\n      \\u003ctd\\u003e2020-09-04\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  RiverBank Properties\\n\\u003c/td\\u003e\\n\\n      \\u003ctd\\u003e\\n  Paying the rent\\n\\u003c/td\\u003e\\n\\n      \\u003ctd class=\\"num\\"\\u003e\\u003cspan class=\\"num\\" title=\\"US Dollar\\"\\u003e2400.00 USD\\u003c/span\\u003e\\u003c/td\\u003e\\n\\n    \\u003c/tr\\u003e\\n  \\u003c/tbody\\u003e\\n\\u003c/table\\u003e\\n",
        "title": "Top 10 biggest expenses",
        "type": "jinja2"
      }
    ]
  },
  "ledger": {
    "ccy": "USD",
    "commodities": {
      "GLD": {
        "currency": "GLD",
        "date": "2004-11-01",
        "meta": {
          "asset_allocation_Commodity_Gold": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:GLD",
          
          "lineno": 52,
          "name": "SPDR Gold Trust (ETF)",
          "price": "USD:google/NYSEARCA:GLD"
        }
      },
      "ITOT": {
        "currency": "ITOT",
        "date": "2004-01-20",
        "meta": {
          "asset_allocation_Equity_Market_NonUS": 1,
          "asset_allocation_Equity_Market_US": 99,
          "asset_class": "ETF",
          "export": "NYSEARCA:ITOT",
          
          "lineno": 37,
          "name": "iShares Core S\\u0026P Total U.S. Stock Market ETF",
          "price": "USD:google/NYSEARCA:ITOT"
        }
      },
      "RGAGX": {
        "currency": "RGAGX",
        "date": "2009-05-01",
        "meta": {
          "asset_allocation_Bond_Cash": 10,
          "asset_allocation_Equity_Market_NonUS": 11,
          "asset_allocation_Equity_Market_US": 79,
          "asset_class": "Fund",
          "export": "MUTF:RGAGX",
          
          "lineno": 66,
          "name": "American Funds The Growth Fund of America Class R-6",
          "price": "USD:google/MUTF:RGAGX"
        }
      },
      "USD": {
        "currency": "USD",
        "date": "1792-01-01",
        "meta": {
          "asset_allocation_Bond_Cash": 100,
          "asset_class": "Cash",
          "export": "CASH",
          
          "lineno": 16,
          "name": "US Dollar"
        }
      },
      "VBMPX": {
        "currency": "VBMPX",
        "date": "1995-09-18",
        "meta": {
          "asset_allocation_Bond_NonUS": 9,
          "asset_allocation_Bond_US": 91,
          "asset_class": "Fund",
          "export": "MUTF:VBMPX",
          
          "lineno": 29,
          "name": "Vanguard Total Bond Market Index Fund Institutional Plus Shares",
          "price": "USD:google/MUTF:VBMPX"
        }
      },
      "VEA": {
        "currency": "VEA",
        "date": "2007-07-20",
        "meta": {
          "asset_allocation_Equity_Market_DevelopedWorld": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:VEA",
          
          "lineno": 59,
          "name": "Vanguard FTSE Developed Markets ETF",
          "price": "USD:google/NYSEARCA:VEA"
        }
      },
      "VHT": {
        "currency": "VHT",
        "date": "2004-01-26",
        "meta": {
          "asset_allocation_Equity_Sector_Health": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:VHT",
          
          "lineno": 45,
          "name": "Vanguard Health Care ETF",
          "price": "USD:google/NYSEARCA:VHT"
        }
      },
      "VMMXX": {
        "currency": "VMMXX",
        "date": "1900-01-01",
        "meta": {
          "asset_allocation_Bond_Cash": 82,
          "asset_allocation_Bond_US": 18,
          "asset_class": "Fund",
          "export": "MUTF:VMMXX (MONEY:USD)",
          
          "lineno": 22,
          "name": "Vanguard Cash Reserves Federal Money Market Fund"
        }
      }
    },
    "dateFirst": "2020-01-01",
    "dateLast": "2022-02-28",
    "operatingCurrencies": [
      "USD"
    ]
  }
}
</script>
<div class="headerline">
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=0">
      Overview
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=1">
      Assets
    </a>
  </h3>
  <h3>
    Income and Expenses
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=3">
      Travelling
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=4">
      Sankey
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=5">
      Projection
    </a>
  </h3>
</div>
<div id="dashboard">
  <div class="panel"
       style="width: 33.3%"
  >
    <h2>
      <a href="/beancount/account/Income/?r=changes">
        Avg. Income per Month 💰
      </a>
    </h2>
    <div id="panel0"
         style="height: 80px"
    >
      <div style="font-size: 40px; font-weight: bold; color: #3daf46; text-align: center;">
        $11,018
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 33.3%"
  >
    <h2>
      <a href="/beancount/account/Expenses/?r=changes">
        Avg. Expenses per Month 💸
      </a>
    </h2>
    <div id="panel1"
         style="height: 80px"
    >
      <div style="font-size: 40px; font-weight: bold; color: #af3d3d; text-align: center;">
        $8,637
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 33.3%"
  >
    <h2>
      <a href="/beancount/income_statement/">
        Avg. Savings per Month ✨
      </a>
    </h2>
    <div id="panel2"
         style="height: 80px"
    >
      <div style="font-size: 40px; font-weight: bold; color: #3daf46; text-align: center;">
        $2,381 (22%)
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      <a href="/beancount/account/Income/?r=changes">
        Income Categories (per month) 💸
      </a>
    </h2>
    <div id="panel3"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 699px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="699"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="699"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="#91cc75"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(163,212,140)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(163,212,140)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(181,221,163)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0,1,-1,0,349.5,200)"
                  fill="#333"
            >
              US
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.009,1,-1,0.009,350.3894,299.996)"
                  fill="#333"
            >
              Hooli
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.251,0.968,-0.968,0.251,391.3073,361.3379)"
                  fill="#333"
            >
              Salary
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.274,0.962,-0.962,0.274,303.815,39.7169)"
                  fill="#333"
            >
              Match401k
            </text>
          </g>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      <a href="/beancount/account/Expenses/?r=changes">
        Expenses Categories (per month) 💸
      </a>
    </h2>
    <div id="panel4"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 699px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="699"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="699"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="#91cc75"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(172,216,151)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(172,216,151)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(172,216,151)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#fac858"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(251,213,129)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(251,213,129)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(251,213,129)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(251,213,129)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#ee6666"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#73c0de"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(150,207,230)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(150,207,230)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(150,207,230)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(150,207,230)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#3ba272"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(108,185,149)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(108,185,149)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(108,185,149)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(108,185,149)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#fc8452"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(252,162,125)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#9a60b4"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(179,135,198)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="#ea7ccc"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(239,156,216)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <path fill="rgb(239,156,216)"
                  stroke="white"
                  stroke-linejoin="bevel"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(1,0.022,-0.022,1,399.4876,201.1136)"
                  fill="#333"
            >
              Taxes
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.689,-0.724,0.724,0.689,452.8974,91.3309)"
                  fill="#333"
            >
              Y2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.783,0.622,-0.622,0.783,466.9598,293.2909)"
                  fill="#333"
            >
              Y2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.817,-0.577,0.577,0.817,308.6665,228.8552)"
                  fill="#333"
            >
              Housing
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.774,-0.633,0.633,0.774,233.4288,295.013)"
                  fill="#333"
            >
              Rent
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.839,0.545,-0.545,0.839,307.5672,172.7669)"
                  fill="#333"
            >
              Wedding
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  transform="matrix(0.472,0.881,-0.881,0.472,325.8756,155.9332)"
                  fill="#333"
            >
              Food
            </text>
          </g>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      <a href="/beancount/income_statement/?filter=%23recurring">
        Recurring Expenses 🔁
      </a>
    </h2>
    <div id="panel5"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 699px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="699"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="699"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
                  stroke-linecap="round"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $0
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $5,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $10,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $15,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $20,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $25,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $30,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2022
            </text>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="rgb(0,0,0)"
                  fill-opacit
                  stroke="#ccc"
                  stroke-width="0"
            >
            </path>
            <path fill="#5470c6">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Recurring
            </text>
            <path fill="#91cc75">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Irregular
            </text>
          </g>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      <a href="/beancount/account/Expenses:Food/">
        Food Expenses 🥐
      </a>
    </h2>
    <div id="panel6"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 699px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="699"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="699"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
                  stroke-linecap="round"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $0
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $200
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $400
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $600
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $800
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $1,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2022
            </text>
            <g clip-path="url(#zr3-c0)">
              <path fill="none"
                    stroke="#5470c6"
                    stroke-width="2"
                    stroke-linejoin="bevel"
              >
              </path>
            </g>
            <path transform="matrix(2,0,0,2,80.6538,231.369)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,102.1615,193.3584)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,123.6692,155.9337)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,145.1769,184.8345)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,166.6846,176.8155)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,188.1923,92.1246)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,209.7,100.4973)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,231.2077,188.115)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,252.7154,175.398)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,274.2231,164.3739)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,295.7308,152.4939)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,317.2385,149.5887)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,338.7462,166.1586)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,360.2538,97.8513)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,381.7615,190.0131)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,403.2692,193.3476)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,424.7769,118.1823)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,446.2846,140.298)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,467.7923,149.9991)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,489.3,227.5053)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,510.8077,201.8715)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,532.3154,198.4236)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,553.8231,206.5155)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,575.3307,72.2904)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,596.8384,123.9117)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,618.3461,237.1362)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
          </g>
          <defs>
            <clipPath id="zr3-c0">
              <path fill="#000">
              </path>
            </clipPath>
          </defs>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 100%"
  >
    <h2>
      Expenses Year-Over-Year 💸
    </h2>
    <div id="panel7"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 1438px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="1438"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="1438"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
                  stroke-linecap="round"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $0
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $5,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $10,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $15,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $20,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $25,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $30,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              January
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              February
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              March
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              April
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              Mai
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              June
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              July
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              August
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              September
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              October
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              November
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              December
            </text>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="rgb(0,0,0)"
                  fill-opacit
                  stroke="#ccc"
                  stroke-width="0"
            >
            </path>
            <path fill="#5470c6">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Housing
            </text>
            <path fill="#91cc75">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Food
            </text>
            <path fill="#fac858">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Shopping
            </text>
            <path fill="#ee6666">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Travel
            </text>
            <path fill="#73c0de">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Other
            </text>
          </g>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 100%"
  >
    <h2>
      Top 10 biggest expenses
    </h2>
    <div id="panel8"
         style="height: 400px"
    >
      <table is="sortable-table"
             class="queryresults"
      >
        <thead>
          <tr>
            <th data-sort="string">
              date
            </th>
            <th data-sort="string">
              payee
            </th>
            <th data-sort="string">
              narration
            </th>
            <th data-sort="num">
              position
            </th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>
              2021-01-15
            </td>
            <td>
            </td>
            <td>
              Wedding
            </td>
            <td class="num">
              <span class="num"
                    title="US Dollar"
              >
                20000.00 USD
              </span>
            </td>
          </tr>
          <tr>
            <td>
              2020-01-04
            </td>
            <td>
              RiverBank Properties
            </td>
            <td>
              Paying the rent
            </td>
            <td class="num">
              <span class="num"
                    title="US Dollar"
              >
                2400.00 USD
              </span>
            </td>
          </tr>
          <tr>
            <td>
              2020-02-05
            </td>
            <td>
              RiverBank Properties
            </td>
            <td>
              Paying the rent
            </td>
            <td class="num">
              <span class="num"
                    title="US Dollar"
              >
                2400.00 USD
              </span>
            </td>
          </tr>
          <tr>
            <td>
              2020-03-03
            </td>
            <td>
              RiverBank Properties
            </td>
            <td>
              Paying the rent
            </td>
            <td class="num">
              <span class="num"
                    title="US Dollar"
              >
                2400.00 USD
              </span>
            </td>
          </tr>
          <tr>
            <td>
              2020-04-03
            </td>
            <td>
              RiverBank Properties
            </td>
            <td>
              Paying the rent
            </td>
            <td class="num">
              <span class="num"
                    title="US Dollar"
              >
                2400.00 USD
              </span>
            </td>
          </tr>
          <tr>
            <td>
              2020-05-05
            </td>
            <td>
              RiverBank Properties
            </td>
            <td>
              Paying the rent
            </td>
            <td class="num">
              <span class="num"
                    title="US Dollar"
              >
                2400.00 USD
              </span>
            </td>
          </tr>
          <tr>
            <td>
              2020-06-04
            </td>
            <td>
              RiverBank Properties
            </td>
            <td>
              Paying the rent
            </td>
            <td class="num">
              <span class="num"
                    title="US Dollar"
              >
                2400.00 USD
              </span>
            </td>
          </tr>
          <tr>
            <td>
              2020-07-06
            </td>
            <td>
              RiverBank Properties
            </td>
            <td>
              Paying the rent
            </td>
            <td class="num">
              <span class="num"
                    title="US Dollar"
              >
                2400.00 USD
              </span>
            </td>
          </tr>
          <tr>
            <td>
              2020-08-06
            </td>
            <td>
              RiverBank Properties
            </td>
            <td>
              Paying the rent
            </td>
            <td class="num">
              <span class="num"
                    title="US Dollar"
              >
                2400.00 USD
              </span>
            </td>
          </tr>
          <tr>
            <td>
              2020-09-04
            </td>
            <td>
              RiverBank Properties
            </td>
            <td>
              Paying the rent
            </td>
            <td class="num">
              <span class="num"
                    title="US Dollar"
              >
                2400.00 USD
              </span>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
<script type="application/json"
        id="page-title"
>
  "Dashboards"
</script>
`;

exports[`Dashboard: HTML Snapshot Tests Overview 1`] = `
<style type="text/css">
  #dashboard {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}
#dashboard .panel {
    padding: 20px;
    min-width: 300px;
}
#dashboard .panel h2 {
    text-align: center;
}
#dashboard a {
    color: #333;
}

/* set panel min-width to 100% on screens
  < 802px (navbar + padding + 2*300px) */
@media (max-width: 802px) {
    #dashboard .panel {
        min-width: 100%;
    }
}
</style>
<script id="favaDashboardsBootstrap"
        type="application/json"
>
  {
  "dashboard": {
    "name": "Overview",
    "panels": [
      {
        "height": "80px",
        "link": "/beancount/balance_sheet/",
        "queries": [
          {
            "bql": "SELECT CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) AS value WHERE account ~ \\u0027^Assets:\\u0027",
            "result": [
              {
                "value": {
                  "USD": 100098.40103
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst value = panel.queries[0].result[0]?.value[ledger.ccy];\\nconst valueFmt = currencyFormat.format(value ?? 0);\\nreturn \`\\u003cdiv style=\\"font-size: 40px; font-weight: bold; color: #3daf46; text-align: center;\\"\\u003e\${valueFmt}\\u003c/div\\u003e\`;\\n",
        "title": "Assets \\ud83d\\udcb0",
        "type": "html",
        "width": "50%"
      },
      {
        "height": "80px",
        "link": "/beancount/balance_sheet/",
        "queries": [
          {
            "bql": "SELECT CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) AS value WHERE account ~ \\u0027^Liabilities:\\u0027",
            "result": [
              {
                "value": {
                  "USD": -3555.44
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst value = panel.queries[0].result[0]?.value[ledger.ccy];\\nconst valueFmt = currencyFormat.format(value ? -value : 0);\\nreturn \`\\u003cdiv style=\\"font-size: 40px; font-weight: bold; color: #af3d3d; text-align: center;\\"\\u003e\${valueFmt}\\u003c/div\\u003e\`;\\n",
        "title": "Liabilities \\ud83d\\udcb3",
        "type": "html",
        "width": "50%"
      },
      {
        "height": "520px",
        "link": "/beancount/income_statement/",
        "queries": [
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Income:\\u0027\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Income/?time={time}",
            "name": "Income",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": -15719.10
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": -10479.40
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": -10479.40
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": -10479.40
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": -10479.40
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": -10479.40
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": -15369.10
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": -9279.40
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": -9279.40
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": -9279.40
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": -9279.40
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": -13948.70
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": -10479.40
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": -10479.40
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": -10509.00
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": -10660.90
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": -10479.40
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": -10524.77
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": -15719.10
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": -9529.40
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": -9599.77
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": -9279.40
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": -9393.00
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": -14009.28
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": -10479.40
                },
                "year": 2022
              },
              {
                "month": 2,
                "value": {
                  "USD": -10479.40
                },
                "year": 2022
              }
            ],
            "stack": "income"
          },
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:Housing:\\u0027 AND NOT \\u0027travel\\u0027 IN tags\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses:Housing/?filter=-#travel\\u0026time={time}",
            "name": "Housing",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": 2602.86
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 2606.07
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": 2602.24
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": 2600.74
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": 2594.64
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": 2596.96
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 2599.75
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": 2572.91
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": 2606.49
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": 2610.48
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": 2601.34
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": 2604.11
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": 2599.66
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": 2601.77
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": 2601.56
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": 2610.53
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": 2611.98
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 2623.07
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 2628.32
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": 2600.90
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": 2573.67
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": 2586.37
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": 2619.62
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 2606.19
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 2592.26
                },
                "year": 2022
              }
            ],
            "stack": "expenses"
          },
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:Food:\\u0027 AND NOT \\u0027travel\\u0027 IN tags\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses:Food/?filter=-#travel\\u0026time={time}",
            "name": "Food",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": 365.30
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 506.08
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": 644.69
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": 537.65
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": 567.35
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": 435.19
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 288.09
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": 525.50
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": 572.60
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": 613.43
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": 657.43
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": 668.19
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": 606.82
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": 546.92
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": 518.47
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": 506.12
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": 784.51
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 353.44
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 459.33
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": 379.61
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": 474.55
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": 487.32
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": 457.35
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 332.26
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 642.46
                },
                "year": 2022
              },
              {
                "month": 2,
                "value": {
                  "USD": 343.94
                },
                "year": 2022
              }
            ],
            "stack": "expenses"
          },
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:Shopping:\\u0027 AND NOT \\u0027travel\\u0027 IN tags\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses:Shopping/?filter=-#travel\\u0026time={time}",
            "name": "Shopping",
            "result": [
              {
                "month": 2,
                "value": {
                  "USD": 900.00
                },
                "year": 2022
              }
            ],
            "stack": "expenses"
          },
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:\\u0027 AND \\u0027travel\\u0027 IN tags\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses/?filter=#travel\\u0026time={time}",
            "name": "Travel",
            "result": [
              {
                "month": 6,
                "value": {
                  "USD": 445.83
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 561.92
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 312.89
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 349.16
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 207.34
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 622.22
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 120.83
                },
                "year": 2022
              }
            ],
            "stack": "expenses"
          },
          {
            "bql": "SELECT year, month, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:\\u0027 AND NOT account ~ \\u0027^Expenses:(Housing|Food|Shopping):\\u0027 AND NOT \\u0027travel\\u0027 IN tags\\nGROUP BY year, month\\n",
            "link": "/beancount/account/Expenses/?filter=all(-account:\\"^Expenses:(Housing|Food|Shopping)\\") -#travel\\u0026time={time}",
            "name": "Other",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": 6391.30
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 4182.20
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": 4302.20
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": 4302.20
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": 4422.20
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": 4182.20
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 6391.30
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": 4302.20
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": 4302.20
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": 4329.05
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": 4302.20
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": 5798.71
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": 24302.20
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": 4182.20
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": 5420.57
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": 4346.95
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": 4302.20
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 4302.20
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 6391.30
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": 4302.20
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": 4373.80
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": 4338.00
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": 4311.15
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 6089.20
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 4302.20
                },
                "year": 2022
              },
              {
                "month": 2,
                "value": {
                  "USD": 4302.20
                },
                "year": 2022
              }
            ],
            "stack": "expenses"
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst months = helpers.iterateMonths(ledger.dateFirst, ledger.dateLast).map((m) =\\u003e \`\${m.month}/\${m.year}\`);\\n\\n// the beancount query only returns months where there was at least one matching transaction, therefore we group by month\\nconst amounts = {};\\nfor (let query of panel.queries) {\\n  amounts[query.name] = {};\\n  for (let row of query.result) {\\n    amounts[query.name][\`\${row.month}/\${row.year}\`] =\\n      query.stack == \\"income\\" ? -row.value[ledger.ccy] : row.value[ledger.ccy];\\n  }\\n}\\n\\nconst series = panel.queries.map((query) =\\u003e ({\\n  type: \\"bar\\",\\n  name: query.name,\\n  stack: query.stack,\\n  data: months.map((month) =\\u003e amounts[query.name][month] ?? 0),\\n}));\\n\\nreturn {\\n  tooltip: {\\n    valueFormatter: currencyFormat.format,\\n  },\\n  legend: {\\n    top: \\"bottom\\",\\n  },\\n  xAxis: {\\n    data: months,\\n  },\\n  yAxis: {\\n    axisLabel: {\\n      formatter: currencyFormat.format,\\n    },\\n  },\\n  series,\\n  onClick: (event) =\\u003e {\\n    const query = panel.queries.find((q) =\\u003e q.name === event.seriesName);\\n    if (query) {\\n      const [month, year] = event.name.split(\\"/\\");\\n      const link = query.link.replaceAll(\\"#\\", \\"%23\\").replace(\\"{time}\\", \`\${year}-\${month.padStart(2, \\"0\\")}\`);\\n      window.open(link);\\n    }\\n  },\\n};\\n",
        "title": "Income/Expenses \\ud83d\\udcb8",
        "type": "echarts"
      }
    ]
  },
  "ledger": {
    "ccy": "USD",
    "commodities": {
      "GLD": {
        "currency": "GLD",
        "date": "2004-11-01",
        "meta": {
          "asset_allocation_Commodity_Gold": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:GLD",
          
          "lineno": 52,
          "name": "SPDR Gold Trust (ETF)",
          "price": "USD:google/NYSEARCA:GLD"
        }
      },
      "ITOT": {
        "currency": "ITOT",
        "date": "2004-01-20",
        "meta": {
          "asset_allocation_Equity_Market_NonUS": 1,
          "asset_allocation_Equity_Market_US": 99,
          "asset_class": "ETF",
          "export": "NYSEARCA:ITOT",
          
          "lineno": 37,
          "name": "iShares Core S\\u0026P Total U.S. Stock Market ETF",
          "price": "USD:google/NYSEARCA:ITOT"
        }
      },
      "RGAGX": {
        "currency": "RGAGX",
        "date": "2009-05-01",
        "meta": {
          "asset_allocation_Bond_Cash": 10,
          "asset_allocation_Equity_Market_NonUS": 11,
          "asset_allocation_Equity_Market_US": 79,
          "asset_class": "Fund",
          "export": "MUTF:RGAGX",
          
          "lineno": 66,
          "name": "American Funds The Growth Fund of America Class R-6",
          "price": "USD:google/MUTF:RGAGX"
        }
      },
      "USD": {
        "currency": "USD",
        "date": "1792-01-01",
        "meta": {
          "asset_allocation_Bond_Cash": 100,
          "asset_class": "Cash",
          "export": "CASH",
          
          "lineno": 16,
          "name": "US Dollar"
        }
      },
      "VBMPX": {
        "currency": "VBMPX",
        "date": "1995-09-18",
        "meta": {
          "asset_allocation_Bond_NonUS": 9,
          "asset_allocation_Bond_US": 91,
          "asset_class": "Fund",
          "export": "MUTF:VBMPX",
          
          "lineno": 29,
          "name": "Vanguard Total Bond Market Index Fund Institutional Plus Shares",
          "price": "USD:google/MUTF:VBMPX"
        }
      },
      "VEA": {
        "currency": "VEA",
        "date": "2007-07-20",
        "meta": {
          "asset_allocation_Equity_Market_DevelopedWorld": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:VEA",
          
          "lineno": 59,
          "name": "Vanguard FTSE Developed Markets ETF",
          "price": "USD:google/NYSEARCA:VEA"
        }
      },
      "VHT": {
        "currency": "VHT",
        "date": "2004-01-26",
        "meta": {
          "asset_allocation_Equity_Sector_Health": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:VHT",
          
          "lineno": 45,
          "name": "Vanguard Health Care ETF",
          "price": "USD:google/NYSEARCA:VHT"
        }
      },
      "VMMXX": {
        "currency": "VMMXX",
        "date": "1900-01-01",
        "meta": {
          "asset_allocation_Bond_Cash": 82,
          "asset_allocation_Bond_US": 18,
          "asset_class": "Fund",
          "export": "MUTF:VMMXX (MONEY:USD)",
          
          "lineno": 22,
          "name": "Vanguard Cash Reserves Federal Money Market Fund"
        }
      }
    },
    "dateFirst": "2020-01-01",
    "dateLast": "2022-02-28",
    "operatingCurrencies": [
      "USD"
    ]
  }
}
</script>
<div class="headerline">
  <h3>
    Overview
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=1">
      Assets
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=2">
      Income and Expenses
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=3">
      Travelling
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=4">
      Sankey
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=5">
      Projection
    </a>
  </h3>
</div>
<div id="dashboard">
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      <a href="/beancount/balance_sheet/">
        Assets 💰
      </a>
    </h2>
    <div id="panel0"
         style="height: 80px"
    >
      <div style="font-size: 40px; font-weight: bold; color: #3daf46; text-align: center;">
        $100,098
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 50%"
  >
    <h2>
      <a href="/beancount/balance_sheet/">
        Liabilities 💳
      </a>
    </h2>
    <div id="panel1"
         style="height: 80px"
    >
      <div style="font-size: 40px; font-weight: bold; color: #af3d3d; text-align: center;">
        $3,555
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 100%"
  >
    <h2>
      <a href="/beancount/income_statement/">
        Income/Expenses 💸
      </a>
    </h2>
    <div id="panel2"
         style="height: 520px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 1438px; height: 520px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="1438"
             height="520"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="1438"
                height="520"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
                  stroke-linecap="round"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $0
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $5,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $10,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $15,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $20,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $25,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $30,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              3/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              5/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              9/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              11/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              3/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              5/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              9/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              11/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2022
            </text>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#91cc75">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#fac858">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#ee6666">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#73c0de">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="#3ba272">
            </path>
            <path fill="rgb(0,0,0)"
                  fill-opacit
                  stroke="#ccc"
                  stroke-width="0"
            >
            </path>
            <path fill="#5470c6">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Income
            </text>
            <path fill="#91cc75">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Housing
            </text>
            <path fill="#fac858">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Food
            </text>
            <path fill="#ee6666">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Shopping
            </text>
            <path fill="#73c0de">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Travel
            </text>
            <path fill="#3ba272">
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Other
            </text>
          </g>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
</div>
<script type="application/json"
        id="page-title"
>
  "Dashboards"
</script>
`;

exports[`Dashboard: HTML Snapshot Tests Projection 1`] = `
<style type="text/css">
  #dashboard {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}
#dashboard .panel {
    padding: 20px;
    min-width: 300px;
}
#dashboard .panel h2 {
    text-align: center;
}
#dashboard a {
    color: #333;
}

/* set panel min-width to 100% on screens
  < 802px (navbar + padding + 2*300px) */
@media (max-width: 802px) {
    #dashboard .panel {
        min-width: 100%;
    }
}
</style>
<script id="favaDashboardsBootstrap"
        type="application/json"
>
  {
  "dashboard": {
    "name": "Projection",
    "panels": [
      {
        "link": "/beancount/income_statement/",
        "queries": [
          {
            "bql": "SELECT year, month,\\nCONVERT(LAST(balance), \\u0027{{ledger.ccy}}\\u0027, DATE_ADD(YMONTH(DATE_ADD(YMONTH(FIRST(date)), 31)), -1)) AS value\\nWHERE account_sortkey(account) ~ \\u0027^[01]\\u0027\\nGROUP BY year, month\\nORDER BY year, month\\n",
            "link": "/beancount/balance_sheet/?time={time}",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": 29234.73618
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 32430.84356
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": 35638.84345
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": 38674.87320
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": 41716.41678
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": 44435.59516
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 50611.69697
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": 51735.46788
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": 54045.40396
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": 56077.40796
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": 57174.07826
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": 62493.75704
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": 45723.39256
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": 49281.63140
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": 51746.88049
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": 55400.47188
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": 58680.93796
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 63628.97993
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 71450.90651
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": 76042.56887
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": 77417.29226
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": 80058.06354
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": 81316.15822
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 88062.05306
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 90631.22126
                },
                "year": 2022
              },
              {
                "month": 2,
                "value": {
                  "USD": 96542.96103
                },
                "year": 2022
              }
            ]
          },
          {
            "bql": "SELECT year, month,\\nCONVERT(LAST(balance), \\u0027{{ledger.ccy}}\\u0027, DATE_ADD(YMONTH(DATE_ADD(YMONTH(FIRST(date)), 31)), -1)) AS value\\nWHERE account_sortkey(account) ~ \\u0027^[01]\\u0027 AND NOT \\u0027wedding\\u0027 IN tags\\nGROUP BY year, month\\nORDER BY year, month\\n",
            "result": [
              {
                "month": 1,
                "value": {
                  "USD": 29234.73618
                },
                "year": 2020
              },
              {
                "month": 2,
                "value": {
                  "USD": 32430.84356
                },
                "year": 2020
              },
              {
                "month": 3,
                "value": {
                  "USD": 35638.84345
                },
                "year": 2020
              },
              {
                "month": 4,
                "value": {
                  "USD": 38674.87320
                },
                "year": 2020
              },
              {
                "month": 5,
                "value": {
                  "USD": 41716.41678
                },
                "year": 2020
              },
              {
                "month": 6,
                "value": {
                  "USD": 44435.59516
                },
                "year": 2020
              },
              {
                "month": 7,
                "value": {
                  "USD": 50611.69697
                },
                "year": 2020
              },
              {
                "month": 8,
                "value": {
                  "USD": 51735.46788
                },
                "year": 2020
              },
              {
                "month": 9,
                "value": {
                  "USD": 54045.40396
                },
                "year": 2020
              },
              {
                "month": 10,
                "value": {
                  "USD": 56077.40796
                },
                "year": 2020
              },
              {
                "month": 11,
                "value": {
                  "USD": 57174.07826
                },
                "year": 2020
              },
              {
                "month": 12,
                "value": {
                  "USD": 62493.75704
                },
                "year": 2020
              },
              {
                "month": 1,
                "value": {
                  "USD": 65723.39256
                },
                "year": 2021
              },
              {
                "month": 2,
                "value": {
                  "USD": 69281.63140
                },
                "year": 2021
              },
              {
                "month": 3,
                "value": {
                  "USD": 71746.88049
                },
                "year": 2021
              },
              {
                "month": 4,
                "value": {
                  "USD": 75400.47188
                },
                "year": 2021
              },
              {
                "month": 5,
                "value": {
                  "USD": 78680.93796
                },
                "year": 2021
              },
              {
                "month": 6,
                "value": {
                  "USD": 83628.97993
                },
                "year": 2021
              },
              {
                "month": 7,
                "value": {
                  "USD": 91450.90651
                },
                "year": 2021
              },
              {
                "month": 8,
                "value": {
                  "USD": 96042.56887
                },
                "year": 2021
              },
              {
                "month": 9,
                "value": {
                  "USD": 97417.29226
                },
                "year": 2021
              },
              {
                "month": 10,
                "value": {
                  "USD": 100058.06354
                },
                "year": 2021
              },
              {
                "month": 11,
                "value": {
                  "USD": 101316.15822
                },
                "year": 2021
              },
              {
                "month": 12,
                "value": {
                  "USD": 108062.05306
                },
                "year": 2021
              },
              {
                "month": 1,
                "value": {
                  "USD": 110631.22126
                },
                "year": 2022
              },
              {
                "month": 2,
                "value": {
                  "USD": 116542.96103
                },
                "year": 2022
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst projectYears = 2; // number of years to project\\n\\n// the beancount query only returns months where there was at least one matching transaction, therefore we group by month\\nconst amounts = {};\\nconst amountsEx = {};\\nfor (let row of panel.queries[0].result) {\\n  amounts[\`\${row.month}/\${row.year}\`] = row.value[ledger.ccy];\\n}\\nfor (let row of panel.queries[1].result) {\\n  amountsEx[\`\${row.month}/\${row.year}\`] = row.value[ledger.ccy];\\n}\\n\\nconst [year, month] = ledger.dateLast.split(\\"-\\").map((x) =\\u003e parseInt(x));\\nconst projectUntil = \`\${year + projectYears}-\${month}-1\`;\\nconst months = helpers.iterateMonths(ledger.dateFirst, projectUntil).map((m) =\\u003e \`\${m.month}/\${m.year}\`);\\nconst lastMonthIdx = months.findIndex((m) =\\u003e m === \`\${month}/\${year}\`);\\nconst ledgerDays = (new Date(ledger.dateLast) - new Date(ledger.dateFirst)) / (1000 * 60 * 60 * 24) + 1;\\n\\nconst results = panel.queries[0].result;\\nconst finalAmount = results[results.length - 1].value[ledger.ccy];\\nconst resultsEx = panel.queries[1].result;\\nconst totalDiffEx = resultsEx[resultsEx.length - 1].value[ledger.ccy] - resultsEx[0].value[ledger.ccy];\\nconst monthlyDiffEx = (totalDiffEx / ledgerDays) * (365 / 12);\\n\\nconst projection = [];\\nlet sum = finalAmount;\\nfor (let i = lastMonthIdx; i \\u003c months.length; i++) {\\n  projection[months[i]] = sum;\\n  sum += monthlyDiffEx;\\n}\\n\\nreturn {\\n  tooltip: {\\n    valueFormatter: currencyFormat.format,\\n  },\\n  legend: {\\n    top: \\"bottom\\",\\n  },\\n  xAxis: {\\n    data: months,\\n  },\\n  yAxis: {\\n    axisLabel: {\\n      formatter: currencyFormat.format,\\n    },\\n  },\\n  series: [\\n    {\\n      type: \\"line\\",\\n      name: \\"Net Worth\\",\\n      smooth: true,\\n      connectNulls: true,\\n      data: months.map((month) =\\u003e amounts[month] || null),\\n    },\\n    {\\n      type: \\"line\\",\\n      name: \\"Excluding onetime txns\\",\\n      smooth: true,\\n      connectNulls: true,\\n      data: months.map((month) =\\u003e amountsEx[month]),\\n    },\\n    {\\n      type: \\"line\\",\\n      name: \\"Projection\\",\\n      lineStyle: {\\n        type: \\"dotted\\",\\n      },\\n      data: months.map((month) =\\u003e projection[month]),\\n    },\\n  ],\\n  onClick: (event) =\\u003e {\\n    if (!panel.queries[0].link) return;\\n    const [month, year] = event.name.split(\\"/\\");\\n    const link = panel.queries[0].link.replaceAll(\\"#\\", \\"%23\\").replace(\\"{time}\\", \`\${year}-\${month.padStart(2, \\"0\\")}\`);\\n    window.open(link);\\n  },\\n};\\n",
        "title": "Net Worth \\ud83d\\udcb0",
        "type": "echarts"
      }
    ]
  },
  "ledger": {
    "ccy": "USD",
    "commodities": {
      "GLD": {
        "currency": "GLD",
        "date": "2004-11-01",
        "meta": {
          "asset_allocation_Commodity_Gold": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:GLD",
          
          "lineno": 52,
          "name": "SPDR Gold Trust (ETF)",
          "price": "USD:google/NYSEARCA:GLD"
        }
      },
      "ITOT": {
        "currency": "ITOT",
        "date": "2004-01-20",
        "meta": {
          "asset_allocation_Equity_Market_NonUS": 1,
          "asset_allocation_Equity_Market_US": 99,
          "asset_class": "ETF",
          "export": "NYSEARCA:ITOT",
          
          "lineno": 37,
          "name": "iShares Core S\\u0026P Total U.S. Stock Market ETF",
          "price": "USD:google/NYSEARCA:ITOT"
        }
      },
      "RGAGX": {
        "currency": "RGAGX",
        "date": "2009-05-01",
        "meta": {
          "asset_allocation_Bond_Cash": 10,
          "asset_allocation_Equity_Market_NonUS": 11,
          "asset_allocation_Equity_Market_US": 79,
          "asset_class": "Fund",
          "export": "MUTF:RGAGX",
          
          "lineno": 66,
          "name": "American Funds The Growth Fund of America Class R-6",
          "price": "USD:google/MUTF:RGAGX"
        }
      },
      "USD": {
        "currency": "USD",
        "date": "1792-01-01",
        "meta": {
          "asset_allocation_Bond_Cash": 100,
          "asset_class": "Cash",
          "export": "CASH",
          
          "lineno": 16,
          "name": "US Dollar"
        }
      },
      "VBMPX": {
        "currency": "VBMPX",
        "date": "1995-09-18",
        "meta": {
          "asset_allocation_Bond_NonUS": 9,
          "asset_allocation_Bond_US": 91,
          "asset_class": "Fund",
          "export": "MUTF:VBMPX",
          
          "lineno": 29,
          "name": "Vanguard Total Bond Market Index Fund Institutional Plus Shares",
          "price": "USD:google/MUTF:VBMPX"
        }
      },
      "VEA": {
        "currency": "VEA",
        "date": "2007-07-20",
        "meta": {
          "asset_allocation_Equity_Market_DevelopedWorld": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:VEA",
          
          "lineno": 59,
          "name": "Vanguard FTSE Developed Markets ETF",
          "price": "USD:google/NYSEARCA:VEA"
        }
      },
      "VHT": {
        "currency": "VHT",
        "date": "2004-01-26",
        "meta": {
          "asset_allocation_Equity_Sector_Health": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:VHT",
          
          "lineno": 45,
          "name": "Vanguard Health Care ETF",
          "price": "USD:google/NYSEARCA:VHT"
        }
      },
      "VMMXX": {
        "currency": "VMMXX",
        "date": "1900-01-01",
        "meta": {
          "asset_allocation_Bond_Cash": 82,
          "asset_allocation_Bond_US": 18,
          "asset_class": "Fund",
          "export": "MUTF:VMMXX (MONEY:USD)",
          
          "lineno": 22,
          "name": "Vanguard Cash Reserves Federal Money Market Fund"
        }
      }
    },
    "dateFirst": "2020-01-01",
    "dateLast": "2022-02-28",
    "operatingCurrencies": [
      "USD"
    ]
  }
}
</script>
<div class="headerline">
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=0">
      Overview
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=1">
      Assets
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=2">
      Income and Expenses
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=3">
      Travelling
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=4">
      Sankey
    </a>
  </h3>
  <h3>
    Projection
  </h3>
</div>
<div id="dashboard">
  <div class="panel"
       style="width: 100%"
  >
    <h2>
      <a href="/beancount/income_statement/">
        Net Worth 💰
      </a>
    </h2>
    <div id="panel0"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 1438px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="1438"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="1438"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
                  stroke-linecap="round"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $0
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $30,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $60,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $90,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $120,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $150,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $180,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2022
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2022
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2022
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2022
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2023
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              4/2023
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              7/2023
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              10/2023
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              1/2024
            </text>
            <g clip-path="url(#zr0-c0)">
              <path fill="none"
                    stroke="#5470c6"
                    stroke-width="2"
                    stroke-linejoin="bevel"
              >
              </path>
            </g>
            <g clip-path="url(#zr0-c1)">
              <path fill="none"
                    stroke="#91cc75"
                    stroke-width="2"
                    stroke-linejoin="bevel"
              >
              </path>
            </g>
            <g clip-path="url(#zr0-c2)">
              <path fill="none"
                    stroke="#fac858"
                    stroke-width="2"
                    stroke-dasharra
                    stroke-linejoin="bevel"
              >
              </path>
            </g>
            <path transform="matrix(2,0,0,2,155.304,286.1479)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,178.312,281.3537)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,201.32,276.5417)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,224.328,271.9877)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,247.336,267.4254)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,270.344,263.3466)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,293.352,254.0825)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,316.36,252.3968)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,339.368,248.9319)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,362.376,245.8839)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,385.384,244.2389)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,408.392,236.2594)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,431.4,261.4149)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,454.408,256.0775)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,477.416,252.3797)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,500.424,246.8993)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,523.432,241.9786)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,546.44,234.5565)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,569.448,222.8236)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,592.456,215.9361)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,615.464,213.8741)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,638.472,209.9129)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,661.48,208.0258)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,684.488,197.9069)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,707.496,194.0532)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,730.504,185.1856)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,155.304,286.1479)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,178.312,281.3537)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,201.32,276.5417)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,224.328,271.9877)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,247.336,267.4254)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,270.344,263.3466)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,293.352,254.0825)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,316.36,252.3968)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,339.368,248.9319)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,362.376,245.8839)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,385.384,244.2389)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,408.392,236.2594)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,431.4,231.4149)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,454.408,226.0776)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,477.416,222.3797)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,500.424,216.8993)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,523.432,211.9786)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,546.44,204.5565)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,569.448,192.8236)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,592.456,185.9361)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,615.464,183.8741)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,638.472,179.9129)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,661.48,178.0258)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,684.488,167.9069)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,707.496,164.0532)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,730.504,155.1856)"
                  fill="#fff"
                  stroke="#91cc75"
            >
            </path>
            <path transform="matrix(2,0,0,2,730.504,185.1856)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,753.512,180.1432)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,776.52,175.1009)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,799.528,170.0586)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,822.536,165.0163)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,845.544,159.9739)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,868.552,154.9316)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,891.56,149.8893)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,914.568,144.847)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,937.576,139.8046)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,960.584,134.7623)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,983.592,129.72)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1006.6,124.6776)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1029.608,119.6353)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1052.616,114.593)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1075.624,109.5507)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1098.632,104.5083)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1121.64,99.466)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1144.6479,94.4237)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1167.656,89.3814)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1190.6639,84.339)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1213.672,79.2967)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1236.6801,74.2544)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1259.688,69.2121)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path transform="matrix(2,0,0,2,1282.696,64.1697)"
                  fill="#fff"
                  stroke="#fac858"
            >
            </path>
            <path fill="rgb(0,0,0)"
                  fill-opacit
                  stroke="#ccc"
                  stroke-width="0"
            >
            </path>
            <path fill="#000"
                  stroke="#5470c6"
                  stroke-width="2"
                  stroke-linecap="butt"
                  stroke-miterlimit="10"
            >
            </path>
            <path fill="#fff"
                  stroke="#5470c6"
                  stroke-width="2"
                  stroke-linecap="butt"
                  stroke-miterlimit="10"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  xml:space="preserve"
                  x="30"
                  fill="#333"
            >
              Net Worth
            </text>
            <path fill="#000"
                  stroke="#91cc75"
                  stroke-width="2"
                  stroke-linecap="butt"
                  stroke-miterlimit="10"
            >
            </path>
            <path fill="#fff"
                  stroke="#91cc75"
                  stroke-width="2"
                  stroke-linecap="butt"
                  stroke-miterlimit="10"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  xml:space="preserve"
                  x="30"
                  fill="#333"
            >
              Excluding onetime txns
            </text>
            <path fill="#000"
                  stroke="#fac858"
                  stroke-width="2"
                  stroke-dasharra
                  stroke-linecap="butt"
                  stroke-miterlimit="10"
            >
            </path>
            <path fill="#fff"
                  stroke="#fac858"
                  stroke-width="2"
                  stroke-linecap="butt"
                  stroke-miterlimit="10"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="start"
                  style="font-size:12px;font-family:sans-serif;"
                  x="30"
                  fill="#333"
            >
              Projection
            </text>
          </g>
          <defs>
            <clipPath id="zr0-c0">
              <path fill="#000">
              </path>
            </clipPath>
            <clipPath id="zr0-c1">
              <path fill="#000">
              </path>
            </clipPath>
            <clipPath id="zr0-c2">
              <path fill="#000">
              </path>
            </clipPath>
          </defs>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
</div>
<script type="application/json"
        id="page-title"
>
  "Dashboards"
</script>
`;

exports[`Dashboard: HTML Snapshot Tests Sankey 1`] = `
<style type="text/css">
  #dashboard {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}
#dashboard .panel {
    padding: 20px;
    min-width: 300px;
}
#dashboard .panel h2 {
    text-align: center;
}
#dashboard a {
    color: #333;
}

/* set panel min-width to 100% on screens
  < 802px (navbar + padding + 2*300px) */
@media (max-width: 802px) {
    #dashboard .panel {
        min-width: 100%;
    }
}
</style>
<script id="favaDashboardsBootstrap"
        type="application/json"
>
  {
  "dashboard": {
    "name": "Sankey",
    "panels": [
      {
        "height": "800px",
        "link": "/beancount/income_statement/",
        "queries": [
          {
            "bql": "SELECT account, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027) AS value\\nWHERE account ~ \\u0027^(Income|Expenses):\\u0027\\nGROUP BY account\\n",
            "link": "/beancount/account/{account}/?time={time}",
            "result": [
              {
                "account": "Income:US:Hooli:Salary",
                "value": {
                  "USD": -263076.66
                }
              },
              {
                "account": "Income:US:Hooli:GroupTermLife",
                "value": {
                  "USD": -1386.24
                }
              },
              {
                "account": "Expenses:Health:Life:GroupTermLife",
                "value": {
                  "USD": 1386.24
                }
              },
              {
                "account": "Expenses:Health:Dental:Insurance",
                "value": {
                  "USD": 165.30
                }
              },
              {
                "account": "Expenses:Health:Medical:Insurance",
                "value": {
                  "USD": 1560.66
                }
              },
              {
                "account": "Expenses:Health:Vision:Insurance",
                "value": {
                  "USD": 2411.10
                }
              },
              {
                "account": "Expenses:Taxes:Y2020:US:Medicare",
                "value": {
                  "USD": 2878.74
                }
              },
              {
                "account": "Expenses:Taxes:Y2020:US:Federal",
                "value": {
                  "USD": 29335.05
                }
              },
              {
                "account": "Expenses:Taxes:Y2020:US:State",
                "value": {
                  "USD": 10339.32
                }
              },
              {
                "account": "Expenses:Taxes:Y2020:US:CityNYC",
                "value": {
                  "USD": 4722.84
                }
              },
              {
                "account": "Expenses:Taxes:Y2020:US:SDI",
                "value": {
                  "USD": 30.24
                }
              },
              {
                "account": "Expenses:Taxes:Y2020:US:SocSec",
                "value": {
                  "USD": 7000.04
                }
              },
              {
                "account": "Expenses:Food:Restaurant",
                "value": {
                  "USD": 10863.58
                }
              },
              {
                "account": "Income:US:Hooli:Match401k",
                "value": {
                  "USD": -20900.00
                }
              },
              {
                "account": "Expenses:Financial:Fees",
                "value": {
                  "USD": 104.00
                }
              },
              {
                "account": "Expenses:Housing:Rent",
                "value": {
                  "USD": 60000.00
                }
              },
              {
                "account": "Expenses:Housing:Electricity",
                "value": {
                  "USD": 1625.00
                }
              },
              {
                "account": "Expenses:Food:Groceries",
                "value": {
                  "USD": 4838.44
                }
              },
              {
                "account": "Expenses:Housing:Phone",
                "value": {
                  "USD": 1429.78
                }
              },
              {
                "account": "Expenses:Housing:Internet",
                "value": {
                  "USD": 1999.71
                }
              },
              {
                "account": "Expenses:Transport:Tram",
                "value": {
                  "USD": 2880.00
                }
              },
              {
                "account": "Expenses:Food:Coffee",
                "value": {
                  "USD": 117.49
                }
              },
              {
                "account": "Income:US:ETrade:ITOT:Dividend",
                "value": {
                  "USD": -29.60
                }
              },
              {
                "account": "Expenses:Financial:Commissions",
                "value": {
                  "USD": 214.80
                }
              },
              {
                "account": "Income:US:ETrade:VEA:Dividend",
                "value": {
                  "USD": -29.60
                }
              },
              {
                "account": "Expenses:Taxes:Y2021:US:Medicare",
                "value": {
                  "USD": 2772.12
                }
              },
              {
                "account": "Expenses:Taxes:Y2021:US:Federal",
                "value": {
                  "USD": 27635.92
                }
              },
              {
                "account": "Expenses:Taxes:Y2021:US:State",
                "value": {
                  "USD": 9492.08
                }
              },
              {
                "account": "Expenses:Taxes:Y2021:US:CityNYC",
                "value": {
                  "USD": 4547.92
                }
              },
              {
                "account": "Expenses:Taxes:Y2021:US:SDI",
                "value": {
                  "USD": 29.12
                }
              },
              {
                "account": "Expenses:Taxes:Y2021:US:SocSec",
                "value": {
                  "USD": 7000.04
                }
              },
              {
                "account": "Expenses:Wedding",
                "value": {
                  "USD": 20000.00
                }
              },
              {
                "account": "Expenses:Food:Alcohol",
                "value": {
                  "USD": 75.28
                }
              },
              {
                "account": "Income:US:ETrade:PnL",
                "value": {
                  "USD": -550.50
                }
              },
              {
                "account": "Income:US:ETrade:GLD:Dividend",
                "value": {
                  "USD": -135.55
                }
              },
              {
                "account": "Income:US:ETrade:VHT:Dividend",
                "value": {
                  "USD": -64.97
                }
              },
              {
                "account": "Expenses:Taxes:Y2022:US:Medicare",
                "value": {
                  "USD": 426.48
                }
              },
              {
                "account": "Expenses:Taxes:Y2022:US:Federal",
                "value": {
                  "USD": 4251.68
                }
              },
              {
                "account": "Expenses:Taxes:Y2022:US:State",
                "value": {
                  "USD": 1460.32
                }
              },
              {
                "account": "Expenses:Taxes:Y2022:US:CityNYC",
                "value": {
                  "USD": 699.68
                }
              },
              {
                "account": "Expenses:Taxes:Y2022:US:SDI",
                "value": {
                  "USD": 4.48
                }
              },
              {
                "account": "Expenses:Taxes:Y2022:US:SocSec",
                "value": {
                  "USD": 1126.16
                }
              },
              {
                "account": "Expenses:Shopping:Electronics",
                "value": {
                  "USD": 900.00
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst days = (new Date(ledger.dateLast) - new Date(ledger.dateFirst)) / (1000 * 60 * 60 * 24) + 1;\\nconst divisor = days / (365 / 12); // monthly\\nconst valueThreshold = 10; // skip nodes below this value\\n\\nconst nodes = [{ name: \\"Income\\" }];\\nconst links = [];\\nfunction addNode(root) {\\n  for (let node of root.children) {\\n    let label = node.name.split(\\":\\").pop();\\n\\n    // skip over pass-through accounts\\n    while (node.children.length === 1) {\\n      node = node.children[0];\\n      label += \\":\\" + node.name.split(\\":\\").pop();\\n    }\\n\\n    // skip nodes below the threshold\\n    if (Math.abs(node.value / divisor) \\u003c valueThreshold) continue;\\n\\n    nodes.push({ name: node.name, label });\\n    if (node.name.startsWith(\\"Income\\")) {\\n      links.push({ source: node.name, target: root.name, value: -node.value / divisor });\\n    } else {\\n      links.push({\\n        source: root.name == \\"Expenses\\" ? \\"Income\\" : root.name,\\n        target: node.name,\\n        value: node.value / divisor,\\n      });\\n    }\\n    addNode(node);\\n  }\\n}\\n\\nconst accountTree = helpers.buildAccountTree(panel.queries[0].result, (row) =\\u003e row.value[ledger.ccy]);\\naddNode(accountTree.children[0]);\\naddNode(accountTree.children[1]);\\n\\nconst savings =\\n  accountTree.children[0].name === \\"Income\\"\\n    ? -accountTree.children[0].value - accountTree.children[1].value\\n    : -accountTree.children[1].value - accountTree.children[0].value;\\nif (savings \\u003e 0) {\\n  nodes.push({ name: \\"Savings\\" });\\n  links.push({ source: \\"Income\\", target: \\"Savings\\", value: savings / divisor });\\n}\\n\\nreturn {\\n  align: \\"left\\",\\n  valueFormatter: currencyFormat.format,\\n  data: {\\n    nodes,\\n    links,\\n  },\\n  onClick: (event, node) =\\u003e {\\n    if (node.name === \\"Savings\\") return;\\n    const time = new URLSearchParams(window.location.search).get(\\"time\\") ?? \\"\\";\\n    const link = panel.queries[0].link.replaceAll(\\"#\\", \\"%23\\").replace(\\"{account}\\", node.name).replace(\\"{time}\\", time);\\n    window.open(link);\\n  },\\n};\\n",
        "title": "Sankey (per month) \\ud83d\\udcb8",
        "type": "d3_sankey"
      }
    ]
  },
  "ledger": {
    "ccy": "USD",
    "commodities": {
      "GLD": {
        "currency": "GLD",
        "date": "2004-11-01",
        "meta": {
          "asset_allocation_Commodity_Gold": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:GLD",
          
          "lineno": 52,
          "name": "SPDR Gold Trust (ETF)",
          "price": "USD:google/NYSEARCA:GLD"
        }
      },
      "ITOT": {
        "currency": "ITOT",
        "date": "2004-01-20",
        "meta": {
          "asset_allocation_Equity_Market_NonUS": 1,
          "asset_allocation_Equity_Market_US": 99,
          "asset_class": "ETF",
          "export": "NYSEARCA:ITOT",
          
          "lineno": 37,
          "name": "iShares Core S\\u0026P Total U.S. Stock Market ETF",
          "price": "USD:google/NYSEARCA:ITOT"
        }
      },
      "RGAGX": {
        "currency": "RGAGX",
        "date": "2009-05-01",
        "meta": {
          "asset_allocation_Bond_Cash": 10,
          "asset_allocation_Equity_Market_NonUS": 11,
          "asset_allocation_Equity_Market_US": 79,
          "asset_class": "Fund",
          "export": "MUTF:RGAGX",
          
          "lineno": 66,
          "name": "American Funds The Growth Fund of America Class R-6",
          "price": "USD:google/MUTF:RGAGX"
        }
      },
      "USD": {
        "currency": "USD",
        "date": "1792-01-01",
        "meta": {
          "asset_allocation_Bond_Cash": 100,
          "asset_class": "Cash",
          "export": "CASH",
          
          "lineno": 16,
          "name": "US Dollar"
        }
      },
      "VBMPX": {
        "currency": "VBMPX",
        "date": "1995-09-18",
        "meta": {
          "asset_allocation_Bond_NonUS": 9,
          "asset_allocation_Bond_US": 91,
          "asset_class": "Fund",
          "export": "MUTF:VBMPX",
          
          "lineno": 29,
          "name": "Vanguard Total Bond Market Index Fund Institutional Plus Shares",
          "price": "USD:google/MUTF:VBMPX"
        }
      },
      "VEA": {
        "currency": "VEA",
        "date": "2007-07-20",
        "meta": {
          "asset_allocation_Equity_Market_DevelopedWorld": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:VEA",
          
          "lineno": 59,
          "name": "Vanguard FTSE Developed Markets ETF",
          "price": "USD:google/NYSEARCA:VEA"
        }
      },
      "VHT": {
        "currency": "VHT",
        "date": "2004-01-26",
        "meta": {
          "asset_allocation_Equity_Sector_Health": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:VHT",
          
          "lineno": 45,
          "name": "Vanguard Health Care ETF",
          "price": "USD:google/NYSEARCA:VHT"
        }
      },
      "VMMXX": {
        "currency": "VMMXX",
        "date": "1900-01-01",
        "meta": {
          "asset_allocation_Bond_Cash": 82,
          "asset_allocation_Bond_US": 18,
          "asset_class": "Fund",
          "export": "MUTF:VMMXX (MONEY:USD)",
          
          "lineno": 22,
          "name": "Vanguard Cash Reserves Federal Money Market Fund"
        }
      }
    },
    "dateFirst": "2020-01-01",
    "dateLast": "2022-02-28",
    "operatingCurrencies": [
      "USD"
    ]
  }
}
</script>
<div class="headerline">
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=0">
      Overview
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=1">
      Assets
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=2">
      Income and Expenses
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=3">
      Travelling
    </a>
  </h3>
  <h3>
    Sankey
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=5">
      Projection
    </a>
  </h3>
</div>
<div id="dashboard">
  <div class="panel"
       style="width: 100%"
  >
    <h2>
      <a href="/beancount/income_statement/">
        Sankey (per month) 💸
      </a>
    </h2>
    <div id="panel0"
         style="height: 800px"
    >
      <svg viewbox="0,0,1438,800">
        <g stroke="#000">
          <rect x="711.5"
                height="710"
                width="15"
                fill="#1f77b4"
          >
            <title>
              Income: $11,018
            </title>
          </rect>
          <rect x="474.6666666666667"
                height="710"
                width="15"
                fill="#ff7f0e"
          >
            <title>
              Income:US: $11,018
            </title>
          </rect>
          <rect x="237.83333333333334"
                height="707.9898314698461"
                width="15"
                fill="#2ca02c"
          >
            <title>
              Income:US:Hooli: $10,987
            </title>
          </rect>
          <rect x="1"
                height="652.6973204191926"
                width="15"
                fill="#d62728"
          >
            <title>
              Income:US:Hooli:Salary: $10,129
            </title>
          </rect>
          <rect x="1"
                height="3.439283186345392"
                width="15"
                fill="#9467bd"
          >
            <title>
              Income:US:Hooli:GroupTermLife: $53
            </title>
          </rect>
          <rect x="1"
                height="51.85322786430834"
                width="15"
                fill="#8c564b"
          >
            <title>
              Income:US:Hooli:Match401k: $805
            </title>
          </rect>
          <rect x="237.83333333333334"
                height="2.010168530154033"
                width="15"
                fill="#e377c2"
          >
            <title>
              Income:US:ETrade: $31
            </title>
          </rect>
          <rect x="1"
                height="1.3657991358516028"
                width="15"
                fill="#7f7f7f"
          >
            <title>
              Income:US:ETrade:PnL: $21
            </title>
          </rect>
          <rect x="948.3333333333334"
                height="13.70339394559494"
                width="15"
                fill="#bcbd22"
          >
            <title>
              Expenses:Health: $213
            </title>
          </rect>
          <rect x="1185.1666666666667"
                height="3.4392831863453353"
                width="15"
                fill="#17becf"
          >
            <title>
              Expenses:Health:Life:GroupTermLife: $53
            </title>
          </rect>
          <rect x="1185.1666666666667"
                height="3.8720219425219966"
                width="15"
                fill="#1f77b4"
          >
            <title>
              Expenses:Health:Medical:Insurance: $60
            </title>
          </rect>
          <rect x="1185.1666666666667"
                height="5.981976923618845"
                width="15"
                fill="#ff7f0e"
          >
            <title>
              Expenses:Health:Vision:Insurance: $93
            </title>
          </rect>
          <rect x="948.3333333333334"
                height="282.2210670939327"
                width="15"
                fill="#2ca02c"
          >
            <title>
              Expenses:Taxes: $4,380
            </title>
          </rect>
          <rect x="1185.1666666666667"
                height="134.73460854744158"
                width="15"
                fill="#d62728"
          >
            <title>
              Expenses:Taxes:Y2020:US: $2,091
            </title>
          </rect>
          <rect x="1422"
                height="7.142199099621948"
                width="15"
                fill="#9467bd"
          >
            <title>
              Expenses:Taxes:Y2020:US:Medicare: $111
            </title>
          </rect>
          <rect x="1422"
                height="72.78071923736235"
                width="15"
                fill="#8c564b"
          >
            <title>
              Expenses:Taxes:Y2020:US:Federal: $1,129
            </title>
          </rect>
          <rect x="1422"
                height="25.652015115885106"
                width="15"
                fill="#e377c2"
          >
            <title>
              Expenses:Taxes:Y2020:US:State: $398
            </title>
          </rect>
          <rect x="1422"
                height="11.71744012854873"
                width="15"
                fill="#7f7f7f"
          >
            <title>
              Expenses:Taxes:Y2020:US:CityNYC: $182
            </title>
          </rect>
          <rect x="1422"
                height="17.367209051639804"
                width="15"
                fill="#bcbd22"
          >
            <title>
              Expenses:Taxes:Y2020:US:SocSec: $270
            </title>
          </rect>
          <rect x="1185.1666666666667"
                height="127.7157407376346"
                width="15"
                fill="#17becf"
          >
            <title>
              Expenses:Taxes:Y2021:US: $1,982
            </title>
          </rect>
          <rect x="1422"
                height="6.877673207043358"
                width="15"
                fill="#1f77b4"
          >
            <title>
              Expenses:Taxes:Y2021:US:Medicare: $107
            </title>
          </rect>
          <rect x="1422"
                height="68.56515105262156"
                width="15"
                fill="#ff7f0e"
          >
            <title>
              Expenses:Taxes:Y2021:US:Federal: $1,064
            </title>
          </rect>
          <rect x="1422"
                height="23.5499993849877"
                width="15"
                fill="#2ca02c"
          >
            <title>
              Expenses:Taxes:Y2021:US:State: $365
            </title>
          </rect>
          <rect x="1422"
                height="11.283460864528479"
                width="15"
                fill="#d62728"
          >
            <title>
              Expenses:Taxes:Y2021:US:CityNYC: $175
            </title>
          </rect>
          <rect x="1422"
                height="17.367209051639634"
                width="15"
                fill="#9467bd"
          >
            <title>
              Expenses:Taxes:Y2021:US:SocSec: $270
            </title>
          </rect>
          <rect x="1185.1666666666667"
                height="19.77071780885649"
                width="15"
                fill="#8c564b"
          >
            <title>
              Expenses:Taxes:Y2022:US: $307
            </title>
          </rect>
          <rect x="1422"
                height="1.0581035703144153"
                width="15"
                fill="#e377c2"
          >
            <title>
              Expenses:Taxes:Y2022:US:Medicare: $16
            </title>
          </rect>
          <rect x="1422"
                height="10.548484777326394"
                width="15"
                fill="#7f7f7f"
          >
            <title>
              Expenses:Taxes:Y2022:US:Federal: $164
            </title>
          </rect>
          <rect x="1422"
                height="3.623076828459716"
                width="15"
                fill="#bcbd22"
          >
            <title>
              Expenses:Taxes:Y2022:US:State: $56
            </title>
          </rect>
          <rect x="1422"
                height="1.7359170560813482"
                width="15"
                fill="#17becf"
          >
            <title>
              Expenses:Taxes:Y2022:US:CityNYC: $27
            </title>
          </rect>
          <rect x="1422"
                height="2.7940206263956497"
                width="15"
                fill="#1f77b4"
          >
            <title>
              Expenses:Taxes:Y2022:US:SocSec: $43
            </title>
          </rect>
          <rect x="948.3333333333334"
                height="39.435223336139984"
                width="15"
                fill="#ff7f0e"
          >
            <title>
              Expenses:Food: $612
            </title>
          </rect>
          <rect x="1185.1666666666667"
                height="26.952712400102428"
                width="15"
                fill="#2ca02c"
          >
            <title>
              Expenses:Food:Restaurant: $418
            </title>
          </rect>
          <rect x="1185.1666666666667"
                height="12.00424554199924"
                width="15"
                fill="#d62728"
          >
            <title>
              Expenses:Food:Groceries: $186
            </title>
          </rect>
          <rect x="948.3333333333334"
                height="0.7909478011072224"
                width="15"
                fill="#9467bd"
          >
            <title>
              Expenses:Financial: $12
            </title>
          </rect>
          <rect x="948.3333333333334"
                height="161.40121021848597"
                width="15"
                fill="#8c564b"
          >
            <title>
              Expenses:Housing: $2,505
            </title>
          </rect>
          <rect x="1185.1666666666667"
                height="148.86094123724837"
                width="15"
                fill="#e377c2"
          >
            <title>
              Expenses:Housing:Rent: $2,310
            </title>
          </rect>
          <rect x="1185.1666666666667"
                height="4.031650491842129"
                width="15"
                fill="#7f7f7f"
          >
            <title>
              Expenses:Housing:Electricity: $63
            </title>
          </rect>
          <rect x="1185.1666666666667"
                height="3.547306609370139"
                width="15"
                fill="#bcbd22"
          >
            <title>
              Expenses:Housing:Phone: $55
            </title>
          </rect>
          <rect x="1185.1666666666667"
                height="4.9613118800257325"
                width="15"
                fill="#17becf"
          >
            <title>
              Expenses:Housing:Internet: $77
            </title>
          </rect>
          <rect x="948.3333333333334"
                height="7.14532517938801"
                width="15"
                fill="#1f77b4"
          >
            <title>
              Expenses:Transport:Tram: $111
            </title>
          </rect>
          <rect x="948.3333333333334"
                height="49.6203137457494"
                width="15"
                fill="#ff7f0e"
          >
            <title>
              Expenses:Wedding: $770
            </title>
          </rect>
          <rect x="948.3333333333334"
                height="2.2329141185587105"
                width="15"
                fill="#2ca02c"
          >
            <title>
              Expenses:Shopping:Electronics: $35
            </title>
          </rect>
          <rect x="948.3333333333334"
                height="153.44960456104332"
                width="15"
                fill="#d62728"
          >
            <title>
              Savings: $2,381
            </title>
          </rect>
        </g>
        <g fill="none"
           stroke-opacit
        >
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-0"
                            gradientunits="userSpaceOnUse"
                            x1="489.6666666666667"
                            x2="711.5"
            >
              <stop offset="0%"
                    stop-color="#ff7f0e"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#1f77b4"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-0)"
                  stroke-width="710"
            >
            </path>
            <title>
              Income:US → Income: $11,018
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-1"
                            gradientunits="userSpaceOnUse"
                            x1="252.83333333333334"
                            x2="474.6666666666667"
            >
              <stop offset="0%"
                    stop-color="#2ca02c"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#ff7f0e"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-1)"
                  stroke-width="707.9898314698461"
            >
            </path>
            <title>
              Income:US:Hooli → Income:US: $10,987
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-2"
                            gradientunits="userSpaceOnUse"
                            x1="16"
                            x2="237.83333333333334"
            >
              <stop offset="0%"
                    stop-color="#d62728"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#2ca02c"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-2)"
                  stroke-width="652.6973204191926"
            >
            </path>
            <title>
              Income:US:Hooli:Salary → Income:US:Hooli: $10,129
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-3"
                            gradientunits="userSpaceOnUse"
                            x1="16"
                            x2="237.83333333333334"
            >
              <stop offset="0%"
                    stop-color="#9467bd"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#2ca02c"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-3)"
                  stroke-width="3.4392831863453854"
            >
            </path>
            <title>
              Income:US:Hooli:GroupTermLife → Income:US:Hooli: $53
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-4"
                            gradientunits="userSpaceOnUse"
                            x1="16"
                            x2="237.83333333333334"
            >
              <stop offset="0%"
                    stop-color="#8c564b"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#2ca02c"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-4)"
                  stroke-width="51.85322786430817"
            >
            </path>
            <title>
              Income:US:Hooli:Match401k → Income:US:Hooli: $805
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-5"
                            gradientunits="userSpaceOnUse"
                            x1="252.83333333333334"
                            x2="474.6666666666667"
            >
              <stop offset="0%"
                    stop-color="#e377c2"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#ff7f0e"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-5)"
                  stroke-width="2.010168530154056"
            >
            </path>
            <title>
              Income:US:ETrade → Income:US: $31
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-6"
                            gradientunits="userSpaceOnUse"
                            x1="16"
                            x2="237.83333333333334"
            >
              <stop offset="0%"
                    stop-color="#7f7f7f"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#e377c2"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-6)"
                  stroke-width="1.3657991358517536"
            >
            </path>
            <title>
              Income:US:ETrade:PnL → Income:US:ETrade: $21
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-7"
                            gradientunits="userSpaceOnUse"
                            x1="726.5"
                            x2="948.3333333333334"
            >
              <stop offset="0%"
                    stop-color="#1f77b4"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#bcbd22"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-7)"
                  stroke-width="13.703393945594893"
            >
            </path>
            <title>
              Income → Expenses:Health: $213
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-8"
                            gradientunits="userSpaceOnUse"
                            x1="963.3333333333334"
                            x2="1185.1666666666667"
            >
              <stop offset="0%"
                    stop-color="#bcbd22"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#17becf"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-8)"
                  stroke-width="3.4392831863453854"
            >
            </path>
            <title>
              Expenses:Health → Expenses:Health:Life:GroupTermLife: $53
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-9"
                            gradientunits="userSpaceOnUse"
                            x1="963.3333333333334"
                            x2="1185.1666666666667"
            >
              <stop offset="0%"
                    stop-color="#bcbd22"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#1f77b4"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-9)"
                  stroke-width="3.8720219425220668"
            >
            </path>
            <title>
              Expenses:Health → Expenses:Health:Medical:Insurance: $60
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-10"
                            gradientunits="userSpaceOnUse"
                            x1="963.3333333333334"
                            x2="1185.1666666666667"
            >
              <stop offset="0%"
                    stop-color="#bcbd22"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#ff7f0e"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-10)"
                  stroke-width="5.9819769236188245"
            >
            </path>
            <title>
              Expenses:Health → Expenses:Health:Vision:Insurance: $93
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-11"
                            gradientunits="userSpaceOnUse"
                            x1="726.5"
                            x2="948.3333333333334"
            >
              <stop offset="0%"
                    stop-color="#1f77b4"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#2ca02c"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-11)"
                  stroke-width="282.22106709393256"
            >
            </path>
            <title>
              Income → Expenses:Taxes: $4,380
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-12"
                            gradientunits="userSpaceOnUse"
                            x1="963.3333333333334"
                            x2="1185.1666666666667"
            >
              <stop offset="0%"
                    stop-color="#2ca02c"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#d62728"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-12)"
                  stroke-width="134.73460854744152"
            >
            </path>
            <title>
              Expenses:Taxes → Expenses:Taxes:Y2020:US: $2,091
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-13"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#d62728"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#9467bd"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-13)"
                  stroke-width="7.142199099621938"
            >
            </path>
            <title>
              Expenses:Taxes:Y2020:US → Expenses:Taxes:Y2020:US:Medicare: $111
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-14"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#d62728"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#8c564b"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-14)"
                  stroke-width="72.78071923736236"
            >
            </path>
            <title>
              Expenses:Taxes:Y2020:US → Expenses:Taxes:Y2020:US:Federal: $1,129
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-15"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#d62728"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#e377c2"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-15)"
                  stroke-width="25.65201511588511"
            >
            </path>
            <title>
              Expenses:Taxes:Y2020:US → Expenses:Taxes:Y2020:US:State: $398
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-16"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#d62728"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#7f7f7f"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-16)"
                  stroke-width="11.717440128548766"
            >
            </path>
            <title>
              Expenses:Taxes:Y2020:US → Expenses:Taxes:Y2020:US:CityNYC: $182
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-17"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#d62728"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#bcbd22"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-17)"
                  stroke-width="17.367209051639797"
            >
            </path>
            <title>
              Expenses:Taxes:Y2020:US → Expenses:Taxes:Y2020:US:SocSec: $270
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-18"
                            gradientunits="userSpaceOnUse"
                            x1="963.3333333333334"
                            x2="1185.1666666666667"
            >
              <stop offset="0%"
                    stop-color="#2ca02c"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#17becf"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-18)"
                  stroke-width="127.71574073763466"
            >
            </path>
            <title>
              Expenses:Taxes → Expenses:Taxes:Y2021:US: $1,982
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-19"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#17becf"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#1f77b4"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-19)"
                  stroke-width="6.877673207043347"
            >
            </path>
            <title>
              Expenses:Taxes:Y2021:US → Expenses:Taxes:Y2021:US:Medicare: $107
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-20"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#17becf"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#ff7f0e"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-20)"
                  stroke-width="68.5651510526216"
            >
            </path>
            <title>
              Expenses:Taxes:Y2021:US → Expenses:Taxes:Y2021:US:Federal: $1,064
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-21"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#17becf"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#2ca02c"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-21)"
                  stroke-width="23.54999938498767"
            >
            </path>
            <title>
              Expenses:Taxes:Y2021:US → Expenses:Taxes:Y2021:US:State: $365
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-22"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#17becf"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#d62728"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-22)"
                  stroke-width="11.28346086452844"
            >
            </path>
            <title>
              Expenses:Taxes:Y2021:US → Expenses:Taxes:Y2021:US:CityNYC: $175
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-23"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#17becf"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#9467bd"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-23)"
                  stroke-width="17.367209051639797"
            >
            </path>
            <title>
              Expenses:Taxes:Y2021:US → Expenses:Taxes:Y2021:US:SocSec: $270
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-24"
                            gradientunits="userSpaceOnUse"
                            x1="963.3333333333334"
                            x2="1185.1666666666667"
            >
              <stop offset="0%"
                    stop-color="#2ca02c"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#8c564b"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-24)"
                  stroke-width="19.770717808856407"
            >
            </path>
            <title>
              Expenses:Taxes → Expenses:Taxes:Y2022:US: $307
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-25"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#8c564b"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#e377c2"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-25)"
                  stroke-width="1.058103570314361"
            >
            </path>
            <title>
              Expenses:Taxes:Y2022:US → Expenses:Taxes:Y2022:US:Medicare: $16
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-26"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#8c564b"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#7f7f7f"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-26)"
                  stroke-width="10.5484847773264"
            >
            </path>
            <title>
              Expenses:Taxes:Y2022:US → Expenses:Taxes:Y2022:US:Federal: $164
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-27"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#8c564b"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#bcbd22"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-27)"
                  stroke-width="3.623076828459641"
            >
            </path>
            <title>
              Expenses:Taxes:Y2022:US → Expenses:Taxes:Y2022:US:State: $56
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-28"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#8c564b"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#17becf"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-28)"
                  stroke-width="1.7359170560812986"
            >
            </path>
            <title>
              Expenses:Taxes:Y2022:US → Expenses:Taxes:Y2022:US:CityNYC: $27
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-29"
                            gradientunits="userSpaceOnUse"
                            x1="1200.1666666666667"
                            x2="1422"
            >
              <stop offset="0%"
                    stop-color="#8c564b"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#1f77b4"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-29)"
                  stroke-width="2.79402062639566"
            >
            </path>
            <title>
              Expenses:Taxes:Y2022:US → Expenses:Taxes:Y2022:US:SocSec: $43
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-30"
                            gradientunits="userSpaceOnUse"
                            x1="726.5"
                            x2="948.3333333333334"
            >
              <stop offset="0%"
                    stop-color="#1f77b4"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#ff7f0e"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-30)"
                  stroke-width="39.43522333614005"
            >
            </path>
            <title>
              Income → Expenses:Food: $612
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-31"
                            gradientunits="userSpaceOnUse"
                            x1="963.3333333333334"
                            x2="1185.1666666666667"
            >
              <stop offset="0%"
                    stop-color="#ff7f0e"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#2ca02c"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-31)"
                  stroke-width="26.95271240010244"
            >
            </path>
            <title>
              Expenses:Food → Expenses:Food:Restaurant: $418
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-32"
                            gradientunits="userSpaceOnUse"
                            x1="963.3333333333334"
                            x2="1185.1666666666667"
            >
              <stop offset="0%"
                    stop-color="#ff7f0e"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#d62728"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-32)"
                  stroke-width="12.004245541999195"
            >
            </path>
            <title>
              Expenses:Food → Expenses:Food:Groceries: $186
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-33"
                            gradientunits="userSpaceOnUse"
                            x1="726.5"
                            x2="948.3333333333334"
            >
              <stop offset="0%"
                    stop-color="#1f77b4"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#9467bd"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-33)"
                  stroke-width="1"
            >
            </path>
            <title>
              Income → Expenses:Financial: $12
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-34"
                            gradientunits="userSpaceOnUse"
                            x1="726.5"
                            x2="948.3333333333334"
            >
              <stop offset="0%"
                    stop-color="#1f77b4"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#8c564b"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-34)"
                  stroke-width="161.40121021848597"
            >
            </path>
            <title>
              Income → Expenses:Housing: $2,505
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-35"
                            gradientunits="userSpaceOnUse"
                            x1="963.3333333333334"
                            x2="1185.1666666666667"
            >
              <stop offset="0%"
                    stop-color="#8c564b"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#e377c2"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-35)"
                  stroke-width="148.86094123724834"
            >
            </path>
            <title>
              Expenses:Housing → Expenses:Housing:Rent: $2,310
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-36"
                            gradientunits="userSpaceOnUse"
                            x1="963.3333333333334"
                            x2="1185.1666666666667"
            >
              <stop offset="0%"
                    stop-color="#8c564b"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#7f7f7f"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-36)"
                  stroke-width="4.031650491842142"
            >
            </path>
            <title>
              Expenses:Housing → Expenses:Housing:Electricity: $63
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-37"
                            gradientunits="userSpaceOnUse"
                            x1="963.3333333333334"
                            x2="1185.1666666666667"
            >
              <stop offset="0%"
                    stop-color="#8c564b"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#bcbd22"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-37)"
                  stroke-width="3.547306609369882"
            >
            </path>
            <title>
              Expenses:Housing → Expenses:Housing:Phone: $55
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-38"
                            gradientunits="userSpaceOnUse"
                            x1="963.3333333333334"
                            x2="1185.1666666666667"
            >
              <stop offset="0%"
                    stop-color="#8c564b"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#17becf"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-38)"
                  stroke-width="4.961311880025631"
            >
            </path>
            <title>
              Expenses:Housing → Expenses:Housing:Internet: $77
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-39"
                            gradientunits="userSpaceOnUse"
                            x1="726.5"
                            x2="948.3333333333334"
            >
              <stop offset="0%"
                    stop-color="#1f77b4"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#1f77b4"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-39)"
                  stroke-width="7.14532517938792"
            >
            </path>
            <title>
              Income → Expenses:Transport:Tram: $111
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-40"
                            gradientunits="userSpaceOnUse"
                            x1="726.5"
                            x2="948.3333333333334"
            >
              <stop offset="0%"
                    stop-color="#1f77b4"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#ff7f0e"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-40)"
                  stroke-width="49.62031374574945"
            >
            </path>
            <title>
              Income → Expenses:Wedding: $770
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-41"
                            gradientunits="userSpaceOnUse"
                            x1="726.5"
                            x2="948.3333333333334"
            >
              <stop offset="0%"
                    stop-color="#1f77b4"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#2ca02c"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-41)"
                  stroke-width="2.2329141185587247"
            >
            </path>
            <title>
              Income → Expenses:Shopping:Electronics: $35
            </title>
          </g>
          <g style="mix-blend-mode: multiply;">
            <linearGradient id="link-42"
                            gradientunits="userSpaceOnUse"
                            x1="726.5"
                            x2="948.3333333333334"
            >
              <stop offset="0%"
                    stop-color="#1f77b4"
              >
              </stop>
              <stop offset="100%"
                    stop-color="#d62728"
              >
              </stop>
            </linearGradient>
            <path stroke="url(#link-42)"
                  stroke-width="153.4496045610432"
            >
            </path>
            <title>
              Income → Savings: $2,381
            </title>
          </g>
        </g>
        <g font-famil
           font-size="10"
        >
          <text x="732.5"
                d
                text-anchor="start"
          >
            Income $11,018
          </text>
          <text x="495.6666666666667"
                d
                text-anchor="start"
          >
            US $11,018
          </text>
          <text x="258.83333333333337"
                d
                text-anchor="start"
          >
            Hooli $10,987
          </text>
          <text x="22"
                d
                text-anchor="start"
          >
            Salary $10,129
          </text>
          <text x="22"
                d
                text-anchor="start"
          >
            GroupTermLife $53
          </text>
          <text x="22"
                d
                text-anchor="start"
          >
            Match401k $805
          </text>
          <text x="258.83333333333337"
                d
                text-anchor="start"
          >
            ETrade $31
          </text>
          <text x="22"
                d
                text-anchor="start"
          >
            PnL $21
          </text>
          <text x="942.3333333333334"
                d
                text-anchor="end"
          >
            Health $213
          </text>
          <text x="1179.1666666666667"
                d
                text-anchor="end"
          >
            Life:GroupTermLife $53
          </text>
          <text x="1179.1666666666667"
                d
                text-anchor="end"
          >
            Medical:Insurance $60
          </text>
          <text x="1179.1666666666667"
                d
                text-anchor="end"
          >
            Vision:Insurance $93
          </text>
          <text x="942.3333333333334"
                d
                text-anchor="end"
          >
            Taxes $4,380
          </text>
          <text x="1179.1666666666667"
                d
                text-anchor="end"
          >
            Y2020:US $2,091
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            Medicare $111
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            Federal $1,129
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            State $398
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            CityNYC $182
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            SocSec $270
          </text>
          <text x="1179.1666666666667"
                d
                text-anchor="end"
          >
            Y2021:US $1,982
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            Medicare $107
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            Federal $1,064
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            State $365
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            CityNYC $175
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            SocSec $270
          </text>
          <text x="1179.1666666666667"
                d
                text-anchor="end"
          >
            Y2022:US $307
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            Medicare $16
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            Federal $164
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            State $56
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            CityNYC $27
          </text>
          <text x="1416"
                d
                text-anchor="end"
          >
            SocSec $43
          </text>
          <text x="942.3333333333334"
                d
                text-anchor="end"
          >
            Food $612
          </text>
          <text x="1179.1666666666667"
                d
                text-anchor="end"
          >
            Restaurant $418
          </text>
          <text x="1179.1666666666667"
                d
                text-anchor="end"
          >
            Groceries $186
          </text>
          <text x="942.3333333333334"
                d
                text-anchor="end"
          >
            Financial $12
          </text>
          <text x="942.3333333333334"
                d
                text-anchor="end"
          >
            Housing $2,505
          </text>
          <text x="1179.1666666666667"
                d
                text-anchor="end"
          >
            Rent $2,310
          </text>
          <text x="1179.1666666666667"
                d
                text-anchor="end"
          >
            Electricity $63
          </text>
          <text x="1179.1666666666667"
                d
                text-anchor="end"
          >
            Phone $55
          </text>
          <text x="1179.1666666666667"
                d
                text-anchor="end"
          >
            Internet $77
          </text>
          <text x="942.3333333333334"
                d
                text-anchor="end"
          >
            Transport:Tram $111
          </text>
          <text x="942.3333333333334"
                d
                text-anchor="end"
          >
            Wedding $770
          </text>
          <text x="942.3333333333334"
                d
                text-anchor="end"
          >
            Shopping:Electronics $35
          </text>
          <text x="942.3333333333334"
                d
                text-anchor="end"
          >
            Savings $2,381
          </text>
        </g>
      </svg>
    </div>
  </div>
</div>
<script type="application/json"
        id="page-title"
>
  "Dashboards"
</script>
`;

exports[`Dashboard: HTML Snapshot Tests Travelling 1`] = `
<style type="text/css">
  #dashboard {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}
#dashboard .panel {
    padding: 20px;
    min-width: 300px;
}
#dashboard .panel h2 {
    text-align: center;
}
#dashboard a {
    color: #333;
}

/* set panel min-width to 100% on screens
  < 802px (navbar + padding + 2*300px) */
@media (max-width: 802px) {
    #dashboard .panel {
        min-width: 100%;
    }
}
</style>
<script id="favaDashboardsBootstrap"
        type="application/json"
>
  {
  "dashboard": {
    "name": "Travelling",
    "panels": [
      {
        "link": "/beancount/income_statement/?filter=#travel",
        "queries": [
          {
            "bql": "SELECT year, CONVERT(SUM(position), \\u0027{{ledger.ccy}}\\u0027, LAST(date)) AS value\\nWHERE account ~ \\u0027^Expenses:\\u0027 AND \\u0027travel\\u0027 IN tags\\nGROUP BY year\\n",
            "link": "/beancount/account/Expenses/?filter=#travel\\u0026time={time}",
            "result": [
              {
                "value": {
                  "USD": 1007.75
                },
                "year": 2020
              },
              {
                "value": {
                  "USD": 1491.61
                },
                "year": 2021
              },
              {
                "value": {
                  "USD": 120.83
                },
                "year": 2022
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst years = helpers.iterateYears(ledger.dateFirst, ledger.dateLast);\\nconst amounts = {};\\n\\n// the beancount query only returns months where there was at least one matching transaction, therefore we group by year\\nfor (let row of panel.queries[0].result) {\\n  amounts[row.year] = row.value[ledger.ccy];\\n}\\n\\nreturn {\\n  tooltip: {\\n    valueFormatter: currencyFormat.format,\\n  },\\n  xAxis: {\\n    data: years,\\n  },\\n  yAxis: {\\n    axisLabel: {\\n      formatter: currencyFormat.format,\\n    },\\n  },\\n  series: [\\n    {\\n      type: \\"line\\",\\n      smooth: true,\\n      data: years.map((year) =\\u003e amounts[year] ?? 0),\\n    },\\n  ],\\n  onClick: (event) =\\u003e {\\n    const link = panel.queries[0].link.replaceAll(\\"#\\", \\"%23\\").replace(\\"{time}\\", event.name);\\n    window.open(link);\\n  },\\n};\\n",
        "title": "Travel Costs per Year \\ud83d\\udcc5",
        "type": "echarts"
      },
      {
        "height": "300px",
        "link": "/beancount/income_statement/?filter=#travel",
        "queries": [
          {
            "bql": "SELECT tags, CONVERT(position, \\u0027{{ledger.ccy}}\\u0027) AS value\\nWHERE account ~ \\u0027^Expenses:\\u0027 AND \\u0027travel\\u0027 IN tags\\nORDER BY date, tags DESC\\n",
            "link": "/beancount/account/Expenses/?filter=#{travel}",
            "result": [
              {
                
                "value": {
                  "currency": "USD",
                  "number": 43.82
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 6.23
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 27.57
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 43.21
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 28.67
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 37.75
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 6.30
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 22.80
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 39.42
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 10.69
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 5.87
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 28.27
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 23.98
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 6.90
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 25.14
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 47.14
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 32.84
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 6.57
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 24.16
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 41.66
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 51.26
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 6.83
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 45.38
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 14.39
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 40.92
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 9.01
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 23.32
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 36.34
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 6.61
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 25.34
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 18.72
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 6.28
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 86.48
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 21.38
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 24.69
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 18.58
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 5.87
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 36.13
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 51.19
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 56.60
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 59.83
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 52.71
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 21.15
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 53.92
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 17.63
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 13.13
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 37.80
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 15.23
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 11.59
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 14.37
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 5.90
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 25.66
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 21.51
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 21.72
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 6.46
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 24.10
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 25.08
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 49.28
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 41.06
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 6.53
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 21.24
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 5.88
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 64.31
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 17.70
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 37.90
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 5.98
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 70.01
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 32.61
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 47.86
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 5.93
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 19.30
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 72.30
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 21.09
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 38.14
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 52.67
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 4.92
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 31.55
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 6.00
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 69.03
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 17.76
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 31.63
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 18.61
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 25.21
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 6.28
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 58.99
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 6.15
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 16.48
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 68.70
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 52.03
                }
              },
              {
                
                "value": {
                  "currency": "USD",
                  "number": 74.96
                }
              }
            ]
          }
        ],
        "script": "const currencyFormat = new Intl.NumberFormat(undefined, {\\n  style: \\"currency\\",\\n  currency: ledger.ccy,\\n  maximumFractionDigits: 0,\\n});\\nconst travels = [];\\nconst amounts = {};\\n\\nfor (let row of panel.queries[0].result) {\\n  const tag = row.tags.find((tag) =\\u003e tag.match(/\\\\-\\\\d{4}/));\\n  if (!(tag in amounts)) {\\n    travels.push(tag);\\n    amounts[tag] = 0;\\n  }\\n  amounts[tag] += row.value.number;\\n}\\n\\nreturn {\\n  tooltip: {\\n    valueFormatter: currencyFormat.format,\\n  },\\n  grid: {\\n    left: \\"150px\\",\\n  },\\n  xAxis: {\\n    type: \\"value\\",\\n    axisLabel: {\\n      formatter: currencyFormat.format,\\n    },\\n  },\\n  yAxis: {\\n    type: \\"category\\",\\n    data: travels,\\n  },\\n  series: [\\n    {\\n      type: \\"bar\\",\\n      data: travels.map((travel) =\\u003e amounts[travel]),\\n    },\\n  ],\\n  onClick: (event) =\\u003e {\\n    const link = panel.queries[0].link.replaceAll(\\"#\\", \\"%23\\").replace(\\"{travel}\\", event.name);\\n    window.open(link);\\n  },\\n};\\n",
        "title": "Destinations \\u2708\\ufe0f",
        "type": "echarts"
      }
    ]
  },
  "ledger": {
    "ccy": "USD",
    "commodities": {
      "GLD": {
        "currency": "GLD",
        "date": "2004-11-01",
        "meta": {
          "asset_allocation_Commodity_Gold": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:GLD",
          
          "lineno": 52,
          "name": "SPDR Gold Trust (ETF)",
          "price": "USD:google/NYSEARCA:GLD"
        }
      },
      "ITOT": {
        "currency": "ITOT",
        "date": "2004-01-20",
        "meta": {
          "asset_allocation_Equity_Market_NonUS": 1,
          "asset_allocation_Equity_Market_US": 99,
          "asset_class": "ETF",
          "export": "NYSEARCA:ITOT",
          
          "lineno": 37,
          "name": "iShares Core S\\u0026P Total U.S. Stock Market ETF",
          "price": "USD:google/NYSEARCA:ITOT"
        }
      },
      "RGAGX": {
        "currency": "RGAGX",
        "date": "2009-05-01",
        "meta": {
          "asset_allocation_Bond_Cash": 10,
          "asset_allocation_Equity_Market_NonUS": 11,
          "asset_allocation_Equity_Market_US": 79,
          "asset_class": "Fund",
          "export": "MUTF:RGAGX",
          
          "lineno": 66,
          "name": "American Funds The Growth Fund of America Class R-6",
          "price": "USD:google/MUTF:RGAGX"
        }
      },
      "USD": {
        "currency": "USD",
        "date": "1792-01-01",
        "meta": {
          "asset_allocation_Bond_Cash": 100,
          "asset_class": "Cash",
          "export": "CASH",
          
          "lineno": 16,
          "name": "US Dollar"
        }
      },
      "VBMPX": {
        "currency": "VBMPX",
        "date": "1995-09-18",
        "meta": {
          "asset_allocation_Bond_NonUS": 9,
          "asset_allocation_Bond_US": 91,
          "asset_class": "Fund",
          "export": "MUTF:VBMPX",
          
          "lineno": 29,
          "name": "Vanguard Total Bond Market Index Fund Institutional Plus Shares",
          "price": "USD:google/MUTF:VBMPX"
        }
      },
      "VEA": {
        "currency": "VEA",
        "date": "2007-07-20",
        "meta": {
          "asset_allocation_Equity_Market_DevelopedWorld": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:VEA",
          
          "lineno": 59,
          "name": "Vanguard FTSE Developed Markets ETF",
          "price": "USD:google/NYSEARCA:VEA"
        }
      },
      "VHT": {
        "currency": "VHT",
        "date": "2004-01-26",
        "meta": {
          "asset_allocation_Equity_Sector_Health": 100,
          "asset_class": "ETF",
          "export": "NYSEARCA:VHT",
          
          "lineno": 45,
          "name": "Vanguard Health Care ETF",
          "price": "USD:google/NYSEARCA:VHT"
        }
      },
      "VMMXX": {
        "currency": "VMMXX",
        "date": "1900-01-01",
        "meta": {
          "asset_allocation_Bond_Cash": 82,
          "asset_allocation_Bond_US": 18,
          "asset_class": "Fund",
          "export": "MUTF:VMMXX (MONEY:USD)",
          
          "lineno": 22,
          "name": "Vanguard Cash Reserves Federal Money Market Fund"
        }
      }
    },
    "dateFirst": "2020-01-01",
    "dateLast": "2022-02-28",
    "operatingCurrencies": [
      "USD"
    ]
  }
}
</script>
<div class="headerline">
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=0">
      Overview
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=1">
      Assets
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=2">
      Income and Expenses
    </a>
  </h3>
  <h3>
    Travelling
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=4">
      Sankey
    </a>
  </h3>
  <h3>
    <a href="/beancount/extension/FavaDashboards/?dashboard=5">
      Projection
    </a>
  </h3>
</div>
<div id="dashboard">
  <div class="panel"
       style="width: 100%"
  >
    <h2>
      <a href="/beancount/income_statement/?filter=%23travel">
        Travel Costs per Year 📅
      </a>
    </h2>
    <div id="panel0"
         style="height: 400px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 1438px; height: 400px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="1438"
             height="400"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="1438"
                height="400"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
                  stroke-linecap="round"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $0
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $300
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $600
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $900
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $1,200
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $1,500
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              2022
            </text>
            <g clip-path="url(#zr0-c0)">
              <path fill="none"
                    stroke="#5470c6"
                    stroke-width="2"
                    stroke-linejoin="bevel"
              >
              </path>
            </g>
            <path transform="matrix(2,0,0,2,335.5333,148.605)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,719,61.5102)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
            <path transform="matrix(2,0,0,2,1102.4667,308.2506)"
                  fill="#fff"
                  stroke="#5470c6"
            >
            </path>
          </g>
          <defs>
            <clipPath id="zr0-c0">
              <path fill="#000">
              </path>
            </clipPath>
          </defs>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
  <div class="panel"
       style="width: 100%"
  >
    <h2>
      <a href="/beancount/income_statement/?filter=%23travel">
        Destinations ✈️
      </a>
    </h2>
    <div id="panel1"
         style="height: 300px; position: relative;"
    >
      <div style="position: relative; overflow: hidden; width: 1438px; height: 300px;">
        <svg xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             version="1.1"
             baseprofile="full"
             width="1438"
             height="300"
             style="position:absolute;left:0;top:0;user-select:none"
        >
          <rect width="1438"
                height="300"
                x="0"
                id="0"
                fill="none"
          >
          </rect>
          <g>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#E0E6F1"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
                  stroke-linecap="round"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <path fill="none"
                  stroke="#6E7079"
            >
            </path>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              trip-chicago-2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              trip-san-francisco-2021
            </text>
            <text dominant-baseline="central"
                  text-anchor="end"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              trip-san-francisco-2020
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $0
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $200
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $400
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $600
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $800
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $1,000
            </text>
            <text dominant-baseline="central"
                  text-anchor="middle"
                  style="font-size:12px;font-family:sans-serif;"
                  fill="#6E7079"
            >
              $1,200
            </text>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
            <path fill="#5470c6">
            </path>
          </g>
        </svg>
      </div>
      <div class>
      </div>
    </div>
  </div>
</div>
<script type="application/json"
        id="page-title"
>
  "Dashboards"
</script>
`;
